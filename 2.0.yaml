paths:
  /articles/{id}:
    get:
      summary: 获取指定文章
      description: |
        根据文章id获取指定文章信息
        ---
        ### 缓存设计：
            对文章内容做客户端缓存，本地缓存和分布式缓存
        ---
        #### 客户端缓存：
            有效期：1天，LastModefy方式
        #### 本地缓存：
            有效期：1天
        #### 分布式缓存：
            有效期：长期
      parameters:
        - description: 文章id
          name: id
          required: true
          type: integer
          in: path
      responses:
        '200':
          description: 文章内容
          schema:
            type: string
        400:
          description: 业务错误[23001文章内容不存在]
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /articles/type/{typeCode}:
    get:
      summary: 根据文章类型获取文章信息
      description: |
        根据传入的文章类型获取文章信息
        ---
        ### 缓存设计：
            对文章内容做客户端缓存，本地缓存和分布式缓存
        ---
        #### 客户端缓存：
            有效期：1天，LastModefy方式
        #### 本地缓存：
            有效期：1天
        #### 分布式缓存：
            有效期：长期
      parameters:
        - description: 文章类型
          name: typeCode
          required: true
          type: string
          in: path
      responses:
        '200':
          description: 文章内容
          schema:
            type: string
        400:
          description: 业务错误[23001文章内容不存在]
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /catalog:
    get:
      summary: 获取商品分类纵向导航
      description: |          
        获取商品分类纵向导航 
        ---
        ### 缓存设计：
            之前的设计根据分类id和导航深度获取分类导航从DB中取出放入分布式缓存
            现在的做法是将商品分类纵向导航放入分布式缓存，本地缓存，客户端缓存
        ---
        #### 分布式缓存：
            当缓存miss时候，将根据分类id和导航深度获取分类导航集合存到分布式缓存
        #### 本地缓存：
            将商品分类纵向导航集合放入本地缓存，缓存失效时间设置为1天
        #### 客户端缓存：
            将商品分类纵向导航集合放入客户端缓存，cache-contorl的max-age为1天
      parameters:
        - description: 分类id
          name: id
          required: true
          type: integer
          in: query
        - description: 导航深度
          name: depth
          required: true
          type: integer
          in: query
      responses:
        '200':
          description: 返回分类导航列表
          schema:
            $ref: '#/definitions/NavigationCategory'
        400:
          description: 参数异常
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
  
  /credits/amount:
    get:
      summary: 获取用户积分余额
      description: 
        1.获取用户积分余额
        2.应该是从用户积分表中取得用户的积分余额
        3.但是现在需要判断支付方式是否启用，然后算出用户可用于支付运费的积分
        4.计算积分与钱兑换的比例
      responses:
        '200':
          description: 返回用户积分余额
          schema:
            type: array
            items:
              $ref: '#/definitions/ModelAmount'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        
  
  /credits/exchange/coupon:
    post:
      summary: 积分兑换优惠券
      description: 
        1.积分兑换优惠券
        2.根据request中的用户ID和私钥，和支付令牌验证用户输入的是否正确，取得MD5加密的token值
        3.根据虚拟商品ID从优惠券定义表取得积分兑换金额
        4.执行积分兑换优惠券
      parameters:
        - name: id
          in: query
          description: 虚拟商品ID
          required: true
          type: string
        - name: paymentToken
          in: query
          description: 支付令牌
          required: true
          type: string
      responses:
        '201':
          description: 返回兑换优惠券是否成功
          schema:
            type: boolean
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙 | 11006支付密码错误 | 18001无可用优惠券 | 28002积分不足 | 28001积分为空]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
          
  /credits:
    get:
      summary: 积分账户变更历史记录
      description: 
        1.积分账户变更历史记录
        2.从积分账户交易日志表中取得相应记录
        3.组装积分操作记录数据
      parameters:
        - name: type
          in: query
          description: 历史类型，0全部，1收入，2支出
          required: true
          type: string
        - name: page
          in: query
          description: 分页标识
          required: false
          type: string
        - name: pageCount
          in: query
          description: 每页数量
          required: false
          type: string
      responses:
        '200':
          description: 返回积分账户变更历史记录
          schema:
            type: array
            items:
              $ref: '#/definitions/ModelHistory'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙 | 11008用户不存在]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /coupons:
    get:
      summary: 可兑换优惠券列表
      description: | 
        可兑换优惠券列表
        ---
        ### 缓存设计：
            之前的设计将可兑换优惠券列表从DB中取出放入分布式缓存
            现在的做法是将可兑换优惠券列表区放入分布式缓存，客户端缓存
        ---
        #### 分布式缓存：
            当缓存miss时候，将分站下可兑换优惠券列表存到分布式缓存，当有更新时清空缓存重新加载
        #### 本地缓存：
            将可兑换优惠券列表放入客户端缓存，缓存过期时间1分钟
        #### 客户端缓存：
            将可兑换优惠券列表放入客户端缓存，设置cache-contorl的max-age为1分钟
      parameters:
        - description: 页码大小
          name: pageSize
          required: true
          type: integer
          in: query
        - description: 页码
          name: pageNo
          required: true
          type: integer
          in: query
      responses:
        '200':
          description: 返回优惠券列表
          schema:
            $ref: '#/definitions/CouponDefinitionResult'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 参数异常
          schema: 
            $ref: '#/definitions/ReturnData'
  /customerService:
    get:
      summary: 获取小能客服url，url相关参数是由后台系统配置
      description: |
        系统分配小能客服url （客户端缓存） 
        ---
        ### 缓存设计：
            之前的设计将小能客服存到配置文件里
            现在的做法是将小能客户使用静态化
        ---
        #### 分布式缓存：
            无
        #### 本地缓存：
            无
        #### 客户端缓存：
            无
      responses:
        '200':
          description: 返回小能客服url
          schema:
            type: string
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /globalConf/appVersion:
    get:
      summary: 获取app版本
      description: |
        获取app版本信息
        ---
        ### 缓存设计：
            之前的做法是直接从property文件里取出相应信息，传给前台显示
            现在的做法是将这些信息存放在客户端缓存中
        ---
        #### 客户端缓存：
            将appVersion信息保存在客户端缓存中（Etag校验，状态码304），
            缓存时间设置为7天
      responses:
        '200':
          description: 获取app版本信息成功
          schema:
            $ref: '#/definitions/AppInfo'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /globalConf/contactUs:
    get:
      summary: 获取帮助中心文章标题集合
      description: |
        获取帮助中心类型的文章标题集合
        ---
        ### 缓存设计：
            之前的做法是直接从系统配置表里取出相应信息，传给前台显示
            现在的做法是将这些信息存放在分布式缓存，本地缓存（系统信息）和客户端缓存中
        ---
        #### 分布式缓存：
            当第一次查询的时候将服务内容、客服电话、售后电话、微信公众号等信息保存在分布式缓存中，缓存时间设置为最长时间
            数据在数据库中发生变化的时候清除缓存，当下次查询的时候重新放入缓存
            存放方式：存放一个SystemConfig对象
        #### 本地缓存：
            将服务内容、客服电话、售后电话、微信公众号等信息保存在本地缓存中，缓存时间设置为7天
        #### 客户端缓存：
            将服务内容、客服电话、售后电话、微信公众号等信息保存在客户端缓存中（Etag校验，状态码304），缓存时间设置为7天
      responses:
        '200':
          description: 返回帮助中心文章集合
          schema:
            type: array
            items:
              $ref: '#/definitions/ArticleTitles'
        '304':
          description: 使用协商缓存
          schema:
            type: array
            items:
              $ref: '#/definitions/ArticleTitles'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
              
  /invitationCode:
    get:
      summary: 获取分享邀请码
      description: |
        获取会员邀请码，系统生成唯一邀请码
        ---
        ### 缓存设计：
        ---
            之前的做法是直接从库表中获取邀请码给前台显示(没有做分布式缓存).

            现在的做法是将会员邀请码放入到客户端缓存和分布式缓存中。
        
        #### 分布式缓存：
            当第一次查询时，将会员邀请码放入分布式缓存中，
            直到数据在库中发生修改时缓存失效，当下次请求查询时重新放入缓存。
            存入方式：字符串
        #### 客户端缓存：
            将会员邀请码存入客户端缓存中，失效时间为最大值，
            使用LastModiFied 校验，状态码 304，优先使用客户端缓存。
      responses:
        '200':
          description: 返回邀请码
          schema:
            type: string
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /invitationCode/activate:
    post:
      summary: 验证邀请码
      description: 验证邀请码，触发邀请码分享事件营销
      parameters:
        - description: 邀请码
          name: code
          required: true
          type: string
          in: query
      responses:
        '201':
          description: 验证成功
          schema:
            type: boolean
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 参数异常
          schema: 
            $ref: '#/definitions/ReturnData'
  /profile:
    get:
      summary: 获取会员基础信息
      description: |
        获取会员基础信息
        ---
        #### 分布式缓存：
            当第一次查询时将会员信息，会员等级信息等保存在分布式缓存中，缓存时间为最大时间。当
            数据库中的数据发生变化时，清除缓存，当下次查询时再放入分布式缓存中。
            存储方式存放 MemberPO, MenberInfoPO, MemberLevelPO 对象
        ---
        #### 本地缓存：
            无
        ---
        #### 客户端缓存：
             将会员信息，会员等级信息等保存在客户端缓存中（Etag校验，状态码304
            ，缓存时间设置为 30分钟。
          
      responses:
        '200':
          description: 返回会员基础信息
          schema:
            $ref: '#/definitions/MemberVO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
    put:
      summary: 修改会员基础信息
      description: 修改会员基础信息
      parameters:
        - description: 会员昵称
          name: nickname
          required: false
          type: string
          in: query
        - description: 会员性别
          name: sex
          required: false
          type: integer
          in: query
        - description: 会员生日
          name: birthday
          required: false
          type: string
          in: query
        - description: 会员头像
          name: pic
          required: false
          type: integer
          in: query
      responses:
        '200':
          description: 修改成功
          schema:
            type: boolean
        400:
          description: 业务错误[500服务器繁忙]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /profile/avatar:
    post:
      summary: 修改会员头像
      description: 修改会员头像
      parameters: 
        - description: 会员头像文件 ##org.springframework.web.multipart.MultipartFile file
          name: file
          required: true
          type: string
          in: query
      responses:
        '201':
          description: 修改成功
          schema:
            type: string
        400:
          description: 参数异常
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /profile/addresses:
    get:
      summary: 会员收货地址列表
      description: |
        1、根据会员id从db获取会员收货地址集合
        2、遍历会员收货地址集合，根据会员地区id向上从cache获取父地区地址
        3、返回地区对象集合
        ---
        #### 分布式缓存：
            当第一次查询会员地址列表时将会员地址列表存放在分布式缓存中，在地址信息在数据库中被改变时，清除缓存中对应会员的地址列表，在下一次再查询时存放如缓存中。
            存储方式：存放一个MemberAddressPO的集合。
        ---
        #### 本地缓存：
            无
        ---
        #### 客户端缓存：
            将会员地址列表信息保存在客户端缓存中（Etag校验，状态码304
            ，缓存时间设置为 1小时
      responses:
        '200':
          description: 返回收货信息集合对象
          schema:
            type: array
            items:
              $ref: '#/definitions/ConsigneeDTO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
    post:
      summary: 添加会员收货信息
      description: |
        1、组装参数成memberAddressDTO，根据会员查询会员可保存收货信息是否超过最大限制，
        2、如果超过最大限制则则不保存，返回0，
        3、如果是默认收货信息，设置当前地址为默认收货地址，
        3、返回新添加收货信息id。
      parameters:
        - name: address
          in: query
          description: 收货地址。
          required: true
          type: string
        - name: mobile
          in: query
          description: 收货人手机号。
          required: true
          type: string
        - name: name
          in: query
          description: 收货人姓名。
          required: true
          type: string
        - name: default
          in: query
          description: 是否是默认收货地址。
          required: false
          type: boolean
        - name: regionId
          in: query
          description: 收货人地址id。
          required: true
          type: integer
      responses:
        '201':
          description: 添加成功的会员收货信息id
          schema:
            type: integer
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /profile/addresses/{id}:
    delete:
      summary: 删除会员收货信息
      description: |
        1、根据会员id查询，会员下所有收货地址集合，
        2、遍历结果，当接收的会员地址信息id等于集合内的id
        3、删除该收货地址
      parameters:
        - name: id
          in: path
          description: 收货地址id。
          required: true
          type: number
      responses:
        '204':
          description: 删除成功
          schema:
            type: string
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]
          schema: 
            $ref: '#/definitions/ReturnData'
            
    put:
      summary: 修改会员收货信息
      description: |
        1、组装参数成memberAddressDTO，
        2、根据收货信息id修改
        3、如果是默认收货信息，设置当前地址为默认收货地址
      parameters:
        - name: id
          in: path
          description: 收货信息id。
          required: true
          type: integer
        - name: address
          in: query
          description: 收货地址。
          required: true
          type: string
        - name: mobile
          in: query
          description: 收货人手机号。
          required: true
          type: string
        - name: name
          in: query
          description: 收货人姓名。
          required: true
          type: string
        - name: default
          in: query
          description: 是否是默认收货地址。
          required: false
          type: boolean
        - name: regionId
          in: query
          description: 收货人地址id。
          required: true
          type: integer
      responses:
        '200':
          description: 添加成功
          schema:
            type: boolean
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /profile/addresses/{id}/default:
    put:
      summary: 修改会员收货信息
      description: |
        1、根据收货信息id修改
        2、根据用户id获取所有对应集合，设置其他为非默认，
        3、设置当前为默认收货地址
      parameters:
        - name: id
          in: path
          description: 收货信息id。
          required: true
          type: integer
      responses:
        '200':
          description: 修改成功
          schema:
            type: boolean
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /reasons/orderCancel:
    get:
      summary: 获取订单取消原因集合
      description: |
        获取订单取消原因集合</br>
        之前设计将取消原因集合信息放入分布式缓存;
        
        ---
        现将订单取消原因集合先放入分布式缓存，本地缓存，客户端缓存；
        
        #### 分布式缓存:
            类型：整体订单取消原因集合存储
            有效期：长期
          
        #### 本地缓存:
            有效期：1天
        
        #### 客户端缓存:
            有效期: 1天
      responses:
        '200':
          description: 返回订单详情
          schema:
            type: array
            $ref: '#/definitions/CancelReasonVO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /reasons/afterSale:
    get:
      summary: 获取售后申请原因列表
      description:  |
        获取售后申请原因列表，放入本地缓存；
        之前设计将售后申请原因集合信息放入分布式缓存；<br/>
        
        ---
        现将售后申请原因集合先放入分布式缓存，本地缓存，客户端缓存；<br/>
        
        #### 本地缓存:
            有效期：1天
        
        #### 分布式缓存:
            类型：整体售后申请原因集合存储
            有效期：长期
         
        #### 客户端缓存:
            有效期: 1天
          
      responses:
        '200':
          description: 返回售后申请原因集合对象
          schema:
            type: array
            items:
              $ref: '#/definitions/AfterSaleReasonVO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /recommendations:
    get:
      summary: 商品推荐
      description: |
        1. 获取商品推荐，根据goodsDTO和memberId
        2. 取得goodsDTO
        3. 根据goodsDTO和memberId获得推荐goodsId方法(登录一套算法，未登录一套)
        4. 根据推荐goodsId获得货品集合
        5. 根据goodsId调用价格服务，来判断是否是抢购商品或赠品
        6. 根据goodsId调用库存接口，来判断是否有可卖数
        7. 获得同分类和同级分类下的商品
        8. 将推荐商品加入本地缓存

        ---        
        ### 缓存设计：
        
        #### 分布式缓存：
            由于商品推荐是使用mahout推荐算法，根据goodsId和memberId取出一组goodsId，再根据goodsId取出相应的货品信息
            根据goodsId和memberId设置缓存方式不理想，所以暂时不设置分布式缓存
        
        #### 本地缓存：
            将推荐商品集合放入本地缓存，缓存失效时间设置为1天
        
        #### 客户端缓存：
            将商品详情对象放入客户端缓存，失效时间1天，校验Lastmodified，状态码 304
      parameters:
        - name: productId
          in: query
          description: 商品ID
          required: true
          type: integer
        - name: styleId
          in: query
          description: 款式ID
          required: false
          type: integer
        - name: goodsId
          in: query
          description: 货品ID
          required: false
          type: integer
      responses:
        200:
          description: 返回商品推荐
          schema:
            type: array
            items:
              $ref: '#/definitions/GoodsMatchVO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 参数异常
          schema: 
            $ref: '#/definitions/ReturnData'
  
  /regions
    get:
     summary: 获取所有地区列表(树状结构)
     description: |
        author: effine [zhangayfei@co-mall.com]
        获取所有可用地区列表，树状结构的json数据
        ---
        ### 缓存设计：
        ---
            #### 静态化：
                对接口返回的结果做json文件静态化，对增加、更新(更改ID、区域中文名称以及区域的父ID)和删除区域需要重新静态化json文件
                访问地址'/regions.json',未发现返回404
            #### 客户端缓存：
                max-age：600s(十分钟)（nginx配置实现）
                协商缓存:目前是根据正确响应结果md5摘要做etag，
                为了不侵入业务逻辑，暂不考虑设置基于更新时间判断的协商缓存
            #### 本地缓存：
                因不会穿透到服务器，不设置本地缓存
            #### 分布式缓存：
                因不会穿透到服务器，不设置分布式缓存
     responses:
        '200':
          description: 地区列表集合
          schema:
            type: array
            items:
              $ref: '#/definitions/RegionDTO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        
  /regions/{id}:
    get:
      summary: 获得送货地区列表
      description: |
        author: effine [zhangayfei@co-mall.com]
        根据区域ID获取送货地区列表(区域ID的子区域集合) 
        ---
        ### 缓存设计：
        ---
            #### 静态化：
                对接口返回的结果做json文件静态化，对增加、更新(更改ID、区域中文名称以及区域的父ID)和删除送货区域需要重新静态化json文件
                访问地址'/regions/${id}.json',未发现返回404
            #### 客户端缓存：
                max-age：600s(十分钟)（nginx配置实现）
                协商缓存:目前是根据正确响应结果md5摘要做etag，
                为了不侵入业务逻辑，暂不考虑设置基于更新时间判断的协商缓存
            #### 本地缓存：
                将地区集合放入本地缓存，缓存失效时间设置为1天
                （因不会穿透到服务器，不设置本地缓存）
            #### 分布式缓存：
                当缓存miss时候，将根据地区id查询地区集合存到分布式缓存
                （因不会穿透到服务器，不设置分布式缓存）
      parameters:
        - name: id
          in: path
          description: 送货区域ID
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: 送货地区列表集合
          schema:
            type: array
            items:
              $ref: '#/definitions/RegionDTO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /comments/{commentId}:
    get:
      summary: 查看商品评论详情
      description: |
        1.查看商品评论详情
        
        2.从cs_member_reviews和cs_member_reviews_product中取得评论信息
        
        3.根据评论ID从cs_member_review_picture查询评论图片
        
        4.已经设置评论缓存
        
        ### 缓存设计：
        ---
            之前的做法是将商品评论详情对象放入分布式缓存，
            当前做法是沿用之前的分布式缓存，并在这之上添加客户端缓存。
          
        ---
        #### 分布式缓存：
            查询时，首先从分布式缓存中获取对象，若未获取到，则从库表中直接获取，
            缓存时间为最长时间，直到数据在库表中发生变化时，缓存失效。
            存入方式：商品评论详情对象
        #### 本地缓存：
            无
        #### 设置客户端缓存：
            将商品详情对象放入客户端缓存，失效时间1天，校验Lastmodified，状态码 304，
            优先使用客户端缓存。
      parameters:
        - name: commentId
          in: path
          description: 评论ID
          required: true
          type: integer
      responses:
        200:
          description: 返回商品评论详情
          schema:
            type: object
            items:
              $ref: '#/definitions/RemarkVO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /comments:
    post:
      summary: 添加商品评论
      description: 
        1.添加商品评论
        2.返回1-内含敏感词，提交失败
              2-提交成功
              3-提交失败
      parameters:
        - name: productId
          in: query
          description: 商品ID
          required: true
          type: integer
        - name: content
          in: query
          description: 评论内容
          required: true
          type: string
        - name: score
          in: query
          description: 评论积分
          required: true
          type: integer
        - name: productToRemarkId
          in: query
          description: 评论ID
          required: true
          type: integer
        - name: isAnonymously
          in: query
          description: 是否匿名
          required: false
          type: boolean
      responses:
        201:
          description: 返回添加商品评论
          schema:
            type: array
            items:
              $ref: '#/definitions/MapAddRemark'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[26001评论包含敏感词汇，请重新输入]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /comments/{commentId}/pictures:
    post:
      summary: 上传评论图片
      description: 
        1.上传评论图片
        2.将base64图片转换为MultipartFile
        3.保存图片
        4.自增评论图片表数据
        4.更新评论表
      parameters:
        - name: commentId
          in: path
          description: 评论ID
          required: true
          type: string
        - name: index
          in: query
          description: 评论索引
          required: true
          type: integer
        - name: pic
          in: query
          description: 图片
          required: true
          type: string
      responses:
        201:
          description: 返回上传评论图片结果
          schema:
            type: boolean
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[26002图片上传失败，请稍后再试]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /session:
    post:
      summary: 会员登录
      description: |
        1. 验证登录
        2. 登录
        3. 触发登录事件营销
        4. 合并购物车
        ---
        ### 缓存设计：
        ---
        #### 分布式缓存:
            会员第一次登录验证成功后,将会员信息(merberInfo,memberEntity,memberLevel)，放入分布式缓存中,时间设置为永久
            登录错误的次数也需要放入分布式缓存，在验证成功时候直接销毁
      parameters:
        - name: loginName
          in: query
          description: 用户名
          required: true
          type: string
        - name: password
          in: query
          description: 密码
          required: true
          type: string
        - name: imageVerifyCode
          in: query
          description: 图片验证码
          required: false
          type: string
      responses:
        '201':
          description: 返回会员登录
          schema:
            type: array
            items:
              $ref: '#/definitions/ModelLogin'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[11101帐号或者密码错误]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'    
 
    delete:
      summary: 会员登出
      description: |
        1. 将会员登录表的登录状态修改
        2. 放入缓存
        ---
        ### 缓存设计：
        ---
        #### 分布式缓存:
            登出时候将分布式缓存中的MembeInfo清除
      responses:
        '204':
          description: 返回会员登录
          schema:
            type: boolean
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /shared/products/{productId}:
    get:
      summary: 分享商品
      description: |
          获取分享商品的信息
          ---
          ### 缓存设计：
              商品存放在索引中，通过索引获取
          ---
          #### 分布式缓存：
              商品存放在索引中，通过索引获取
          #### 本地缓存：
              将分享商品信息放入本地缓存，缓存失效时间设置为1天
          #### 客户端缓存：
              将分享商品放入客户端缓存，设置cache-control的max-age为1天
      parameters:
        - name: productId
          in: path
          description: 商品ID
          required: true
          type: integer
      responses:
        '200':
          description: 返回Model
          schema:
            type: array
            items:
              $ref: '#/definitions/Model'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /shared/orders/{orderId}:
    get:
      summary: 分享订单
      description: |
           获取分享订单的信息，订单分享是在下单后可以选择“立即分享”进行分享，目前业务只有一个场景，无需设计客户端缓存
            ---
            ### 缓存设计：
                订单存放在mongodb中，无需增加分布式缓存
            ---
            #### 分布式缓存：
                无
            #### 本地缓存：
                无
            #### 客户端缓存：
                无
      parameters:
        - name: orderId
          in: path
          description: 订单ID
          required: true
          type: integer
      responses:
        '200':
          description: 返回Model
          schema:
            type: array
            items:
              $ref: '#/definitions/Model'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /shared/invitations/{code}:
    get:
      summary: 分享邀请码
      description: |
           1、返回title、pic、content、url
      parameters:
        - name: code
          in: path
          description: 邀请码
          required: true
          type: string
      responses:
        '200':
          description: 返回Model
          schema:
            type: array
            items:
              $ref: '#/definitions/Model'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /shared/products/{productId}/callback:
    post:
      summary: 执行分享商品事件(除分享邀请码事件营销参见使用邀请码接口)
      description: |
          1、触发事件营销
      parameters:
        - name: productId
          in: path
          description: 商品ID
          required: true
          type: integer
      responses:
        '200':
          description: 返回Model
          schema:
            type: array
            items:
              $ref: '#/definitions/Model'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /shared/orders/{orderId}/callback:
    post:
      summary: 执行分享订单事件(除分享邀请码事件营销参见使用邀请码接口)
      description: |
          1、触发事件营销
      parameters:
        - name: orderId
          in: path
          description: 订单ID
          required: true
          type: integer
      responses:
        '201':
          description: 返回Model
          schema:
            type: array
            items:
              $ref: '#/definitions/Model'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /structures/{parentId}:
    get:
      description: |
        根据父节点获取其子节点数据
        ---
        ### 缓存设计：
        ---
          #### 客户端缓存
            有效期：30天，LastModefy方式
          #### 本地缓存：
            有效期：30天
          #### 分布式缓存：
            有效期：长期
      parameters:
        - description: 网站结构标识
          name: parentId
          required: true
          type: integer
          format: int32
          in: path
      responses:
        "200":
          description: 返回网站结构内容
          schema:
            type: array
            items:
              $ref: "#/definitions/StructureVO"
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /subsites:
    get:
      summary: 获取分站信息
      description: |
        获取分站信息
        ---
        ### 缓存设计：
            之前的设计将分站可用地区从DB中取出放入分布式缓存
            现在的做法是将分站可用地区放入分布式缓存，本地缓存，客户端缓存
        ---
        #### 分布式缓存：
            当缓存miss时候，将分站下可用地区集合存到分布式缓存，当有更新时清空缓存重新加载
        #### 本地缓存：
            将分站下可用地区集合放入本地缓存，缓存失效时间设置为1天
        #### 客户端缓存：
            将分站下可用地区集合放入客户端缓存，设置cache-control的max-age为1天
      responses:
        '200':
          description: 返回一组分站信息
          schema:
            type: array
            items:
              $ref: '#/definitions/RegionDTO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[20001分站下没有关联地区]
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /verifyCodes/captcha:
    get:
      summary: 获取图片验证码
      description: |
        之前设计图片验证码信息放入分布式缓存;<br/>
        
        ---
        现将图片验证码信息放入分布式缓存；<br/>
        
        #### 分布式缓存:
            类型：根据会话将验证码字符串存入分布式缓存
            有效期：60秒
          
        #### 本地缓存:
            无
        
        #### 客户端缓存:
            无
      responses:
        '200':
          description: 获取图片验证码成功
          schema:
            $ref: '#/definitions/CaptchaInfo'
        400:
          description: 参数异常
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /verifyCodes/captcha/validation:
    get:
      summary: 验证图片验证码
      description: |
        之前设计图片验证码信息从分布式缓存获取;<br/>
        
        ---
        现将图片验证码信息从分布式缓存获取；<br/>
        
        #### 分布式缓存:
            类型：根据会话获取分布式缓存的图片验证码信息
            有效期：60
        
        #### 本地缓存:
            无
        
        #### 客户端缓存:
            无
      parameters:
        - description: 验证码
          name: captcha
          required: true
          type: string
          in: query
      responses:
        '200':
          description: 验证成功
          schema:
            type: boolean
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[11003验证码有误]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /verifyCodes/sms:
    get:
      summary: 获取短信验证码
      description: |
        根据用户Unique获取短信验证码，重复获取会覆盖缓存中的验证码，每个会话60秒内只可以获取1次;
        
        ---
        根据用户Unique获取短信验证码，重复获取会覆盖缓存中的验证码，每个会话60秒内只可以获取1次（现在是前端做限制校验，可否服务端也做时间限制校验）；
        
        #### 分布式缓存:
            类型：根据会话存入分布式缓存的短信验证码信息
            有效期：15分钟
          
        #### 本地缓存:
            无
        
        #### 客户端缓存:
            无
      responses:
        '200':
          description: 获取短信验证结果
          schema:
            type: string
            description: 验证码
        400:
          description: 参数异常
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /verifyCodes/sms/validation:
    get:
      summary: 验证短信验证码
      description: |
        根据用户Unique获取短信验证码，和用户输入的验证码进行校验;
        
        ---
        根据用户Unique获取短信验证码，和用户输入的验证码进行校验;
        
        #### 分布式缓存:
            类型：根据会话获取分布式缓存的短信验证码字符串信息
            有效期：15分钟
          
        #### 本地缓存:
            无
        
        #### 客户端缓存:
            无
      parameters:
        - description: 验证码
          name: smsCode
          required: true
          type: string
          in: query
      responses:
        '200':
          description: 验证成结果
          schema:
            type: boolean
            description: 是否验证成功
        400:
          description: 业务错误[11003验证码有误]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /favorites/{goodsId}:
    delete:
      summary: 删除会员商品收藏
      description: 根据商品ID删除会员收藏的具体商品
      parameters:
        - name: goodsId
          in: path
          description: 商品id
          required: true
          type: integer
      responses:
        204:
          description: 删除成功
        400:
          description: 业务错误[27005删除收藏失败]
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /favorites/collect/{goodsStyleId}:
    get:
      summary: 验证对应款式货品是否已经收藏
      parameters:
        - name: goodsStyleId
          in: path
          description: 货品款式id
          required: true
          type: integer
      responses:
        '200':
          description: 验证结果
          schema:
            type: boolean
            description: 会员是否收藏货品
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /favorites:
    get:
      summary: 获取会员商品收藏列表
      description: |          
        获取会员商品收藏列表分页数据 
        ---
        #### 分布式缓存：
            当缓存miss时候，将根据会员用户ID获取收藏的商品集合存到分布式缓存
        #### 客户端缓存：
            将会员收藏商品列表放入客户端缓存，cache-contorl的max-age为1天
      parameters:
        - description: 当前页码(分页参数)
          name: page
          required: false
          type: integer
          in: query
        - description: 每页显示记录数(分页参数)
          name: pageCount
          required: false
          type: integer
          in: query
      responses:
        200:
          description: 返回会员收藏商品列表
          schema:
            $ref:  '#/definitions/FavoritesResult'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'

    post:
      summary: 会员添加商品收藏
      description: 
        会员添加商品收藏
      parameters:
        - name: goodsId
          in: query
          description: 商品ID
          required: true
          type: integer
      responses:
        201:
          description: 添加成功
        400:
          description: 业务错误[227002添加收藏失败 | 27004商品已经收藏]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'

  #结算中心
  /checkout:
    post:
      summary: 创建结算信息
      description: |
        1、获取用户默认地址信息
        2、获取支付方式
        3、获取配送方式
        4、购物车状态戳放置
      responses:
        '201':
          description: 返回结算信息
          schema:
            $ref: '#/definitions/CheckoutVO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
    put:
      summary: 修改收货地址、支付方式、配送方式
      description: |
        修改收货地址、支付方式、配送方式，扫描结算规则后计算结算金额
      parameters:
        - name: consigneeId
          in: query
          description: 地址id。
          required: true
          type: integer
        - name: deliveryModeId
          in: query
          description: 配送方式ID。
          required: true
          type: integer
        - name: paymentModeType
          in: query
          description: 支付方式ID。
          required: true
          type: integer
        - name: ownDeliveryAddrId
          in: query
          description: 地址点id，预留字段暂时无用
          required: false
          type: integer
      responses:
        '200':
          description: 返回结算金额对象
          schema:
            $ref: '#/definitions/OrderAmountVO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 参数异常
          schema: 
            $ref: '#/definitions/ReturnData'

  /checkout/coupons:
    get:
      summary: 获取会员的可使用优惠券列表
      description: |
        获取会员的可使用优惠券列表
      responses:
        '200':
          description: 返回结算金额对象
          schema:
            $ref: '#/definitions/Coupons'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
  
    put:
      summary: 使用优惠券
      description: |
        使用优惠券后，会重新计算金额，刷新优惠券的可使用列表和不可使用列表
      parameters:
        - name: consigneeId
          in: query
          description: 地址id。
          required: true
          type: integer
        - name: deliveryModeId
          in: query
          description: 配送方式ID。
          required: true
          type: integer
        - name: paymentModeType
          in: query
          description: 支付方式ID。
          required: true
          type: integer
        - name: ownDeliveryAddrId
          in: query
          description: 地址点id，预留字段暂时无用
          required: false
          type: integer
        - name: couponIds
          in: query
          description: 使用优惠券id集合
          required: true
          type: string
      responses:
        '200':
          description: 返回可使用优惠券集合
          schema:
            type: object
            description: 结算金额和可使用优惠券集合
            properties:
              coupons: 
                type: array
                description: 优惠券列表
                items:
                  $ref: '#/definitions/Coupons'
              amount:
                $ref: '#/definitions/OrderAmountVO'
        400:
          description: 参数异常
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'

  /checkout/credits:
    get:
      summary: 获取可用积分额度
      description: |
        根据订单应付金额计算可使用积分最大额度
      responses:
        '200':
          description: 返回可使用积分最大额度
          schema:
            type: number
            format: int32
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'    
    put:
      summary: 使用积分
      description: |
        使用积分后重新计算结算金额
      parameters:
        - name: pointValue
          in: query
          description: 使用积分值。
          required: true
          type: number
          format: int32
      responses:
        '200':
          description: 返回结算金额对象
          schema:
            $ref: '#/definitions/OrderAmountVO'
        400:
          description: 业务错误[13004使用积分超过限额]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'

  /orders:
    post:
      summary: 创建订单
      description: |
        结算中心下单
      parameters:
        - name: createOrderVO
          in: body
          description: 下单对象
          required: true
          schema:
            $ref: '#/definitions/CreateOrderVO'
      responses:
        '201':
          description: 返回订单信息
          schema:
            type: object
            properties: 
              orderId:
                type: integer
                description: 订单id
              orderNumber:
                type: string
                description: 订单号
              paymentMethod:
                type: string
                description: 支付方式
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]
          schema: 
            $ref: '#/definitions/ReturnData'

    get:
      summary: 获取订单列表
      description: 获取会员的订单列表
      parameters:
        - description: 查询类型【0-全部;1-待付款;2-待收货;3-待评价;4-待发货】
          name: type
          required: true
          type: integer
          in: query
        - description: 页码
          name: pageNo
          required: true
          type: integer
          in: query
        - description: 页码大小
          name: pageSize
          required: true
          type: integer
          in: query
      responses:
        '200':
          description: 返回订单列表
          schema:
            $ref: '#/definitions/OrderResult'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'

  /orders/{orderId}:
    get:
      summary: 获取订单详情
      description: 获取会员的订单详情
      parameters:
        - description: 订单id
          name: orderId
          required: true
          type: integer
          in: path
      responses:
        '200':
          description: 返回订单详情
          schema:
            type: object
            $ref: '#/definitions/OrderVO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /orders/{orderId}/cancel:
    put:
      summary: 获取订单取消原因集合
      description: 获取订单取消原因集合
      parameters:
        - description: 订单id
          name: orderId
          required: true
          type: integer
          in: path
        - description: 原因id
          name: reasonId
          required: true
          type: integer
          in: query
      responses:
        '200':
          description: 返回操作结果
          schema:
            type: boolean
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[12002该订单已经提交了取消申请，请勿重复提交]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'   

  /orders/{orderId}/traces:
    get:
      summary: 获取订单跟踪信息集合
      description: 获取订单跟踪信息集合
      parameters:
        - description: 订单id
          name: orderId
          required: true
          type: integer
          in: path
      responses:
        '200':
          description: 返回操作结果
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderTrackVO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[12003无效订单]
          schema: 
            $ref: '#/definitions/ReturnData'    

  /orders/{orderId}/rebuy:
    post:
      summary: 再次购买
      description: 订单再次购买，把指定订单中的商品重新加入购物车中，抢购商品和促销商品不会被加入
      parameters:
        - description: 订单id
          name: orderId
          required: true
          type: integer
          in: path
      responses:
        '201':
          description: 返回操作结果
          schema:
            type: boolean
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[12005再次购买失败]
          schema: 
            $ref: '#/definitions/ReturnData'

  /presents:
    get:
      summary: 根据促销规则获取赠品集合
      description: |
        1. 通过购物车ID获取购物车DTO
        2. 根据购物车DTO取出规则DTO，从规则DTO取出促销规则ID和传过来的促销规则ID进行比较
        3. 将匹配的赠品集合返回
        
        ---
        ### 缓存设计：
        #### 分布式缓存：
            无
        #### 本地缓存：
            无
        #### 客户端缓存：
            无
      parameters:
        - name: ruleId
          in: query
          description: 促销规则ID
          required: true
          type: integer
      responses:
        200:
          description: 返回赠品集合
          schema: 
            type: array
            items:
              $ref: '#/definitions/PresentVO'
        400:
          description: 参数异常
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'           

  /products/{productId}/{sytleId}:
    get:
      summary: 根据商品ID和款式ID获取商品详情
      description: |
        1. 获取商品详细信息
        2. 如果传到后台的货品ID不为空，使用商品ID和货品ID获取
        3. 如果传到后台的货品ID为空,使用商品ID和款式ID获取
        4. 取得商品是否收藏信息
        5. 放入本地缓存
        
        ---
        ### 缓存设计：
        #### 分布式缓存：
            当第一次查询时，将商品信息放入分布式缓存中，
            直到数据在库中发生修改时缓存失效，当下次请求查询时重新放入缓存。
        #### 本地缓存：
            将商品信息存入本地缓存，缓存失效时间设置为1h
        #### 客户端缓存：
            将商品信息存入客户端缓存，用Etag校验，状态码304
      parameters:
        - name: productId
          in: path
          description: 商品ID
          required: true
          type: integer
        - name: sytleId
          in: path
          description: 款式ID
          required: true
          type: integer
      responses:
        200:
          description: 返回商品详情
          schema:
            type: object
            items:
              $ref: '#/definitions/ProductInfoVO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /products/{goodsId}:
    get:
      summary: 根据商品ID和款式ID获取商品详情
      description: |
        ---
        ### 缓存设计：
        #### 分布式缓存：
            当第一次查询时，将商品信息放入分布式缓存中，
            直到数据在库中发生修改时缓存失效，当下次请求查询时重新放入缓存。
        #### 本地缓存：
            将商品信息存入本地缓存，缓存失效时间设置为1h
        #### 客户端缓存：
            将商品信息存入客户端缓存，用Etag校验，状态码304
      parameters:
        - name: goodsId
          in: path
          description: 商品ID
          required: true
          type: integer
      responses:
        200:
          description: 返回商品详情
          schema:
            type: object
            items:
              $ref: '#/definitions/ProductInfoVO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'          

  /products/results:
    get:
      summary: 商品搜索结果列表
      description: |
        1. 根据条件去索引服务查询货品集合
        2. 根据货品集合的货品信息组装APP商品信息
        3. 价格排序索引返回的不正确，重新排序
        4. 放入本地缓存
        
        ---
        ### 缓存设计：
        #### 分布式缓存：
            从索引中取得信息，所以去掉分布式缓存的设计
        #### 本地缓存：
            将商品信息存入本地缓存，缓存失效时间设置为1h
        #### 客户端缓存：
            将商品信息存入客户端缓存，用Etag校验，状态码304
      parameters:
        - name: category
          in: query
          description: 分类
          required: false
          type: string
        - name: brand
          in: query
          description: 品牌
          required: false
          type: string
        - name: keyword
          in: query
          description: 关键词
          required: false
          type: string
        - name: url
          in: query
          description: URL
          required: true
          type: string
        - name: beginPrice
          in: query
          description: 最小价
          required: false
          type: string
        - name: endPrice
          in: query
          description: 最大价
          required: false
          type: string
        - name: order
          in: query
          description: 顺序类型
          required: true
          type: string
        - name: page
          in: query
          description: 页数
          required: true
          type: string
        - name: pageCount
          in: query
          description: 每页条数
          required: true
          type: string
      responses:
        200:
          description: 返回商品搜索结果列表
          schema:
            type: array
            items:
              $ref: '#/definitions/MapProductSearchResult'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[10002商品搜索失败]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /products:
    get:
      summary: 商品展示列表信息
      description: 商品展示信息
      parameters:
        - name: productIds
          in: query
          description: 商品ID
          required: true
          type: string
      responses:
        200:
          description: 商品展示信息
          schema:
            type: array
            items:
              $ref: '#/definitions/SimpleProductVO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[10003请输入至少一个商品id]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'

  /products/{productId}/comments:
    get:
      summary: 查看商品评论列表
      description: |
        1. 取得商品评论列表
        2. 根据评论ID从cs_member_review_picture查询评论图片
        3. 放入本地缓存
                
        ---
        ### 缓存设计：
        #### 分布式缓存：
            当第一次查询时，将评论列表放入分布式缓存中，
            直到数据在库中发生修改时缓存失效，当下次请求查询时重新放入缓存。
            存入方式：key为productId的评论ID列表，具体数量根据type再遍历评论列表
        #### 本地缓存：
            将评论列表存入本地缓存，缓存失效时间设置为1h
        #### 客户端缓存：
            将评论列表存入客户端缓存，设置cache-control的max-age为1h
      parameters:
        - name: productId
          in: path
          description: 商品ID
          required: true
          type: integer
        - name: pageNo
          in: query
          description: 页码
          required: true
          type: integer
        - name: pageSize
          in: query
          description: 页码大小
          required: true
          type: integer
        - name: type
          in: query
          description: 评价类型
          required: true
          type: integer
      responses:
        200:
          description: 返回商品评论列表
          schema:
            type: array
            items:
              $ref: '#/definitions/MapRemark'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'

  /products/{productId}/comments/count:
    get:
      summary: 评论数量
      description: |
        1. 根据productId获取评论数量
        2. 查出所有评论，好评，中评，差评，有图片的评论
        3. 已放入服务器缓存
        4. 放入本地缓存
        
        ---
        ### 缓存设计：
        #### 分布式缓存：
            当第一次查询时，将评论数量放入分布式缓存中，
            直到数据在库中发生修改时缓存失效，当下次请求查询时重新放入缓存。
            存入方式：key为productId的评论ID列表，具体数量根据type再遍历评论列表
        #### 本地缓存：
            将评论数量存入本地缓存，缓存失效时间设置为1h
        #### 客户端缓存：
            将评论数量存入客户端缓存，设置cache-control的max-age为1h
      parameters:
        - name: productId
          in: path
          description: 商品ID
          required: true
          type: integer
      responses:
        200:
          description: 返回评论数量
          schema:
            type: array
            items:
              $ref: '#/definitions/MapRemarkCount'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'   

  /products/{goodsId}/buyNow:
    post:
      summary: 立即购买
      description: |
        1. 根据请求取得购物车ID
        2. 取消原购物车中商品的选中状态
        3. 添加商品（区分普通商品和抢购商品）
        4. 成功情况下跳转到生成结算信息接口
        
        ---
        ### 缓存设计：
        #### 分布式缓存：
            无
        #### 本地缓存：
            无
        #### 客户端缓存：
            无
      parameters:
        - name: goodsId
          in: path
          description: 货品ID
          required: true
          type: integer
        - name: quantity
          in: query
          description: 数量
          required: false
          type: integer
        - name: flashSaleId
          in: query
          description: 规则ID
          required: false
          type: integer    
      responses:
        201:
          description: 返回结算信息
          schema:
            type: array
            items:
              $ref: '#/definitions/Model'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 参数异常
          schema: 
            $ref: '#/definitions/ReturnData'

  /feedbacks:
    post:
      summary: 添加投诉建议
      description: 添加投诉建议，建议内容会进行关键词过滤，后台审核后才可以展示
      
      
      parameters:
        - description: 投诉内容，最多200个字符
          name: content
          required: true
          type: string
          in: query
        - description: 联系方式，最多50个字符
          name: contact
          required: true
          type: string
          in: query
      responses:
        201:
          description: 添加成功
          schema:
            type: boolean
        400:
          description: 业务错误[29001添加错误]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'

  /cart/items/count:
    get:
      summary: 获取购物车商品数量
      description: |
          1. 如果登录meberID和subsiteID取得购物车ID，如果没登录使用subsiteID和unique取得购物车ID
          2. 根据购物车ID取得购物车对象
          3. 循环购物车对象做累加
      responses:
        200:
          description: 返回购物车数量
          schema: 
            type: integer
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'

  /cart:
    get:
      summary: 我的购物车信息
      description: |
          1. 如果登录meberID和subsiteID取得购物车ID，如果没登录使用subsiteID和unique取得购物车ID
          2. 规则扫描验证购物车有效性
          3. 将购物车DTO转换为VO
      responses:
        200:
          description: 返回购物车VO
          schema:
            items:
              $ref: '#/definitions/CartVO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'

  /cart/items:
    post:
      summary: 添加商品或抢购商品到购物车
      description: |
          1. 添加商品
          2. 更新购物车缓存
          ---
          1. 验证抢购规则
          2. 占用库存数量
          3. 添加商品到购物车
          4. 更新购物车缓存
      parameters:
        - name: goodsId
          in: query
          description: 商品ID
          required: true
          type: integer
        - name: quantity
          in: query
          description: 数量
          required: true
          type: integer
        - name: flashSaleId
          in: query
          description: 抢购商品ID
          required: false
          type: integer
      responses:
        201:
          description: 购物车添加成功
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[13001商品不存在 | 2商品库存不足 | 3活动已经结束，客官下次活动早点来呦~ | 4您已参加过该活动，客官下次活动早点来呦~ | 5您的购物车中已加入该活动商品，无法继续添加！| 6您已经超过此商品的购买上限了。 | 7您的操作无效~ | 9请先登录后购买 | 500抱歉，系统繁忙，请重新添加。]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'    
            
  /cart/items/{itemId}/count:
    put:
      summary: 修改商品数量
      description: |
          1. 验证库存数量
          2. 通过购物车ID取得购物车
          3. 修改商品数量
          4. 更新购物车
      parameters:
        - name: goodsId
          in: query
          description: 商品ID
          required: true
          type: integer
        - name: quantity
          in: query
          description: 数量
          required: true
          type: integer
        - name: itemId
          in: path
          description: 购物篮条目ID
          required: true
          type: integer
      responses:
        200:
          description: 商品数量修改成功
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /cart/{basketId}/items/{itemId}:
    delete:
      summary: 删除购物车商品
      description: |
          1. 获取购物车
          2. 取得购物篮
          3. 删除抢购规则，释放库存数
          4. 删除购物车条目
          5. 更新购物车
      parameters:
        - name: basketId
          in: path
          description: 购物篮ID
          required: true
          type: integer
        - name: itemId
          in: path
          description: 购物篮条目ID
          required: true
          type: integer
      responses:
        204:
          description: 购物车商品删除成功
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /cart/{basketId}/items/{itemId}/peresents:
    put:
      summary: 添加单品赠品
      description: |
          1. 验证赠品并加入购物车
          2. 添加到规则
          3. 更新购物车
      parameters:
        - name: basketId
          in: path
          description: 购物篮ID
          required: true
          type: integer
        - name: itemId
          in: path
          description: 购物篮条目ID
          required: true
          type: integer
        - name: presents
          in: body
          description: 赠品实体
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PresentVO'
        - name: ruleId
          in: query
          description: 规则ID
          required: true
          type: integer
      responses:
        200:
          description: OK
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /cart/peresenets:
    put:
      summary: 添加多品赠品
      description: |
          1. 验证赠品并加入购物车
          2. 添加到规则
          3. 更新购物车
      parameters:
        - name: presents
          in: body
          description: 赠品实体
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PresentVO'
        - name: ruleId
          in: query
          description: 规则ID
          required: true
          type: integer
      responses:
        200:
          description: 添加多品赠品成功
        400:
          description: 业务错误[500服务器繁忙]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /cart/{basketId}/items/{itemId}:
    put:
      summary: 修改单品赠品
      description: |
        1. 循环所有的赠品
        2. 当赠品的presentItemId为0时为添加赠品
        3. 当赠品的Number为0时候为删除商品
        4. 其他情况为修改商品数量
      parameters:
        - name: basketId
          in: path
          description: 购物篮ID
          required: true
          type: integer
        - name: itemId
          in: path
          description: 购物篮条目ID
          required: true
          type: integer
        - name: presents
          in: body
          description: 赠品实体
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PresentVO'
        - name: ruleId
          in: query
          description: 规则ID
          required: true
          type: integer
      responses:
        200:
          description: 修改单品赠品成功
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /cart/{basketId}/items:
    put:
      summary: 修改多品赠品
      description: |
        1. 循环所有的赠品
        2. 当赠品的presentItemId为0时为添加赠品
        3. 当赠品的Number为0时候为删除商品
        4. 其他情况为修改商品数量
      parameters:
        - name: basketId
          in: path
          description: 购物篮ID
          required: true
          type: integer
        - name: presents
          in: body
          description: 赠品实体
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PresentVO'
        - name: ruleId
          in: query
          description: 规则ID
          type: integer
          required: true
      responses:
        200:
          description: 修改多品赠品成功
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /cart/{basketId}/items/{itemId}/peresents:
    delete:
      summary: 删除单品赠品
      description: |
        1. 根据购物车ID、购物篮ID、规则、选中商品ID、选中赠品ID来删除单品赠品
      parameters:
        - name: basketId
          in: path
          description: 购物篮ID
          required: true
          type: integer
        - name: itemId
          in: path
          description: 购物篮条目ID
          required: true
          type: integer
        - name: peresenet
          in: body
          description: 赠品实体
          required: true
          schema:
            items:
              $ref: '#/definitions/PresentVO'
        - name: ruleId
          in: query
          description: 规则ID
          type: integer
          required: true
      responses:
        204:
          description: 删除单品赠品成功
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData' 
            
  /cart/{basketId}/peresents:
    delete:
      summary: 删除多品赠品
      description: |
        1. 根据购物车ID、购物篮ID、规则、选中赠品ID来删除多品赠品
      parameters:
        - name: basketId
          in: path
          description: 购物篮ID
          required: true
          type: integer
        - name: present
          in: body
          description: 赠品实体
          required: true
          schema:
            items:
              $ref: '#/definitions/PresentVO'
        - name: ruleId
          in: query
          description: 规则ID
          type: integer
          required: true
      responses:
        204:
          description: 多品赠品删除成功
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData' 
            
  /cart/{basketId}/items/{itemId}/selected:
    put:
      summary: 选中单个商品
      description: |
        1. 根据购物车ID、购物篮ID、购物篮条目ID来确定选中商品
      parameters:
        - name: basketId
          in: path
          description: 购物篮ID
          required: true
          type: integer
        - name: itemId
          in: path
          description: 购物篮条目ID
          required: true
          type: integer
      responses:
        200:
          description: 选中单个商品
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]
          schema: 
            $ref: '#/definitions/ReturnData' 
    delete:
      summary: 取消选中单个商品
      description: |
        1. 根据购物车ID、购物篮ID、购物篮条目ID来确定取消选中商品
      parameters:
        - name: basketId
          in: path
          description: 购物篮ID
          required: true
          type: integer
        - name: itemId
          in: path
          description: 购物篮条目ID
          required: true
          type: integer
      responses:
        204:
          description: NO_CONTENT
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]
          schema: 
            $ref: '#/definitions/ReturnData' 
            
  /cart/{basketId}/items/selected:
    put:
      summary: 选中购物篮的所有商品
      description: |
          1. 根据购物车ID取得购物车
          2. 设置选中商户下所有商品
          3. 更新购物车
      parameters:
        - name: basketId
          in: path
          description: 购物篮ID
          required: true
          type: integer
      responses:
        200:
          description: 选中购物篮的所有商品
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]
          schema: 
            $ref: '#/definitions/ReturnData'
    delete:
      summary: 取消选中购物篮商品
      description: |
          1. 根据购物车ID取得购物车
          2. 设置取消选中商户下所有商品
          3. 更新购物车
      parameters:
        - name: basketId
          in: path
          description: 购物篮ID
          required: true
          type: integer
          format: integer
      responses:
        204:
          description: 取消选中购物篮的所有商品
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]
          schema: 
            $ref: '#/definitions/ReturnData' 
            
  /cart/items/selected:
    put:
      summary: 选中购物车所有商品
      description: |
          1. 根据购物车ID取得购物车
          2. 选中所有商品
          3. 更新购物车
      responses:
        200:
          description: 选中购物车中的所有商品
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]
          schema: 
            $ref: '#/definitions/ReturnData'
            
    delete:
      summary: 取消选中购物车所有商品
      description: |
          1. 根据购物车ID取得购物车
          2. 取消选中的所有商品
          3. 更新购物车
      responses:
        204:
          description: 取消选中购物车中的所有商品
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]
          schema: 
            $ref: '#/definitions/ReturnData' 
            
  /cart/empty:
    delete:
      summary: 清空购物车
      description: |
          1. 通过缓存取得购物车
          2. 删除购物车抢购规则，释放库存
          3. 更新购物车
      responses:
        204:
          description: 清空购物车
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[500服务器繁忙]
          schema: 
            $ref: '#/definitions/ReturnData'
            
            
  /keywords/{structureId}/{count}:
    get:
      summary: 热搜关键字列表
      description: |
        1、根据structureId找到相应的热词网站结构
        2、根据count过滤搜关键字个数
        3、如果memcached没有，根据查询条件在数据库查询
        4、放入本地缓存
        5、返回字符串集合
        
        ---
        ### 缓存设计：
        ---
        #### 客户端缓存：
            有效期：60分钟，LastModefy方式
        #### 本地缓存：
            有效期：60分钟
        #### 分布式缓存：
            有效期：长期
      parameters:
        - description: 热词网站结构id
          name: structureId
          required: true
          type: integer
          in: path
        - description: 热词数量
          name: count
          required: true
          type: integer
          in: path
      responses:
        '200':
          description: 返回一组热搜关键词
          schema:
            type: array
            items:
              type: string
              description: 热词
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[1未找到相应的热词，请检查参数 | 2热词请求数量必须大于0]
          schema: 
            $ref: '#/definitions/ReturnData'
            
  /afterSales:
    post:
      summary: 添加售后申请单
      description: |
        1、返回新添加收货信息id。
      parameters:
        - name: orderId
          in: query
          description: 订单id。
          required: true
          type: integer
        - name: picCount
          in: query
          description: 上传图片个数。
          required: true
          type: integer
        - name: reason
          in: query
          description: 售后申请原因id。
          required: true
          type: integer
        - name: type
          in: query
          description: 退款类型，0退款不退货，1退款。
          required: true
          type: integer
        - name: content
          in: query
          description: 售后申请原因。
          required: true
          type: string
      responses:
        '201':
          description: 添加成功
          schema:
            type: integer
            description: 收货信息id
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[24001售后申请提交失败]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'

  /afterSales/list/{pageCount}/{page}:
    get:
      summary: 获取用户售后单列表
      description: |
        获取用户售后单列表
        ---
        ### 缓存设计：
        ---
        #### 客户端缓存：
            有效期：5分钟，LastModefy方式
      parameters:
        - name: pageCount
          in: path
          description: 每页数目总数
          required: true
          type: integer
        - name: page
          in: path
          description: 当前页
          required: true
          type: integer
      responses:
        '200':
          description: 用户售后单列表
          schema:
            type: object
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 参数异常
          schema: 
            $ref: '#/definitions/ReturnData' 

  /afterSales/{id}:
    get:
      summary: 获取售后申请原因详情
      description: |
        1、根据申请单id获取售后申请原因详情
        2、根据售后申请单原因id获取对应原因类型
        3、从订单获取退款项列表
        ---
        ### 缓存设计：
        ---
        #### 客户端缓存：
            有效期：5分钟，LastModefy方式
      parameters:
        - name: id
          in: path
          description: 售后申请id。
          required: true
          type: integer
      responses:
        '200':
          description: 返回售后申请原因集合对象
          schema:
            $ref: '#/definitions/ServiceApplyDTO'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[24003售后申请单号错误]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData'    
            
  /afterSales/uploadImage:            
    post:
      summary: 售后图片上传
      description: |
        1、在申请售后信息时先会保存假图片id集合
        2、售后信息保存完毕返回售后信息id
        3、利用此id更新具体售后信息图片id集合并保存图片
      parameters:
        - name: id
          in: query
          description: 售后申请信息id
          required: true
          type: integer
        - name: pic
          in: query
          description: 图片
          required: true
          type: string
        - name: index
          in: query
          description: 图片索引
          required: true
          type: integer
      responses:
        '201':
          description: 上传成功（data:返回null）
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
        400:
          description: 业务错误[24002图片上传失败]/参数异常，具体错误参照返回结果的Message
          schema: 
            $ref: '#/definitions/ReturnData' 
  
  /category:
    get:
      summary: 搜索商品
      description: |
        通过品牌、分类、关键字搜索相关商品列表
      parameters:
        - name: c
          in: query
          description: |
            商品标准分类ID，允许多个分类，多个分类参数以'-'分隔，
            如：c=1-2-3，表示ID为1,2,3的三个标准分类
          type: string
          required: false
        - name: vc
          in: query
          description: |
            商品虚拟分类ID，允许多个分类，多个分类参数以'-'分隔，
            如：vc=1-2-3，表示ID为1,2,3的三个虚拟分类
          type: string
        - name: sc
          in: query
          type: string
          description: 当前选择的分类ID
          required: false
        - name: s
          in: query
          type: string
          description: 搜索关键字
        - name: b
          in: query
          type: string
          description: 商品品牌ID，允许多个品牌，多个品牌参数以'-'分隔，
            如：b=1-2-3，表示ID为1,2,3的三个品牌
          required: false
        - name: p
          in: query
          type: string
          required: false
          description: 商品价格区间，最低价格与最高价格之间以'-'分隔，如：p=30-40
        - name: attr
          in: query
          type: array
          required: false
          items:
            type: string
          description: 商品动态属性组，一组属性由属性名和属性值以'-'连接，属性值不能多选
            如：attr={'颜色-白色','产地-中国'}
        - name: pageNum
          in: query
          type: integer
          required: false
          description: 当前分页页码，默认为1
        - name: o
          in: query
          type: integer
          required: false
          description: 排序方式，默认为0
      responses:
        200:
          description: 左侧分类导航数据，面包屑导航数据，筛选器数据，分页展示商品列表
          schema:
              $ref: '#/definitions/searchResult'
        '500':
          description: 服务器异常
          schema: 
            $ref: '#/definitions/ReturnData'
               

definitions: 
  Model:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
         
#  Error:
#    type: object
#    properties:
#      code:
#        type: integer
#        format: int32
#      message:
#        type: string
#      fields:
#        type: string
        
  ModelAmount:
    type: object
    properties:
      key:
        type: object
        properties:
          amount:
            type: integer
            description: 积分余额
          exchangeRatio:
            type: integer
            description: 积分兑换现金比例
      value:
            type: object
        
  ModelHistory:
    type: object
    properties:
      key:
        type: object
        properties:
          pageNo:
            type: integer
            description: 当前页码
          totalNum:
            type: integer
            description: 总记录数
          items:
            type: array
            items:
              $ref: '#/definitions/MemberAccountPointTransLogVO'
            description: 积分账户变更历史记录
      value:
            type: object
            
  MemberAccountPointTransLogVO:
    type: object
    properties:
      name:
        type: string
        description: 积分操作名称
      date:
        type: string
        description: 操作发生时间
      amount:
        type: integer
        description: 积分变化量，收入为正，支出为负      
        
  searchResult:
      type: object
      properties:
        products:
          $ref: '#/definitions/SearchingProductsVO'
          description: 搜索出的商品集合
        filterConditions:
          $ref: '#/definitions/FilterConditionsVO'
          description: 筛选条件集合
        leftCategories:
          type: array
          items:
            $ref: '#/definitions/Menu'
          description: 左侧分类树
        navigator:
          type: array
          items:
            $ref: '#/definitions/UrlVO'
          description: 面包屑导航
  SearchingProductsVO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/definitions/CategoryProductVO'
          description: 商品信息
        pageNum:
          type: integer
          format: int32
          description: 当前页码
        sort:
          type: integer
          format: int32
          description: 排序
        totalCount:
          type: integer
          format: int32
          description: 商品集合总数量
        totalPage:
          type: integer
          format: int32
          description: 分页总页数
  CategoryProductVO:
      type: object
      properties:
        productId:
          type: integer
          format: int32
          description: 商品ID
        productName:
          type: string
          description: 商品名称
        productUrl:
          type: string
          description: 商品链接地址
        thumbUrl:
          type: string
          description: 商品缩略图地址
        shelfStatus:
          type: integer
          format: int32
          description: 商品上下架状态，1上架，0下架
        availableStock:
          type: integer
          format: int32
          description: 商品可用库存
        promotionPrice:
          type: string
          description: 商品促销价
        promotionTag:
          type: string
          description: 商品促销标签，单品促销
        inPromotion:
          type: boolean
          description: 是否促销中
        isTimeLimit:
          type: boolean
          description: 是否抢购商品
        salesVolumn:
          type: integer
          format: int32
          description: 销量
        commentCount:
          type: integer
          format: int32
          description: 评论数
  FilterConditionsVO:
      type: object
      properties:
        searchWord:
          type: string
          description: 搜索关键字
        selectedCategoryId:
          type: integer
          format: int32
          description: 已选中的分类ID
        selectedBrandMap:
          type: object
          $ref: '#/definitions/MapSelectedBrand'
          description: 已选中的品牌
        brands:
          type: array
          items:
            $ref: '#/definitions/BrandConditionVO'
          description: 筛选条件-品牌
        selectedPriceRange:
          type: string
          description: 已选中的价格区间，如'10-20'
        priceRanges:
          type: array
          items:
            $ref: '#/definitions/PriceRangeConditionVO'
          description: 筛选条件-价格区间
        selectedAttributeMap:
          type: object
          $ref: '#/definitions/MapSelectedAttribute'
          description: 已选中的商品属性
        attributes:
          type: array
          items:
            $ref: '#/definitions/ProductAttributeConditionVO'
          description: 筛选条件-商品动态属性
  MapSelectedBrand:
      type: object
      properties:
        key:
          type: integer
          format: int32
          description: 品牌ID
        value:
          type: string
          description: 品牌名称
  BrandConditionVO:
    type: object
    properties:
        id:
          type: integer
          format: int32
          description: 品牌ID
        name:
          type: string
          description: 品牌名称
        selected:
          type: boolean
          description: 是否被选择
  PriceRangeConditionVO:
    type: object
    properties:
        minPrice:
          type: integer
          format: int32
          description: 最低价格
        maxPrice:
          type: integer
          format: int32
          description: 最高价格
        selected:
          type: boolean
          description: 是否被选择
  MapSelectedAttribute:
      type: object
      properties:
        key:
          type: string
          description: 属性名称
        value:
          type: string
          description: 属性值
  ProductAttributeConditionVO:
    type: object
    properties:
        attrName:
          type: string
          description: 属性名称
        attrValues:
          type: array
          items:
            type: string
          description: 属性值集合
  Menu:
    type: object
    properties:
        id:
          type: integer
          format: int32
          description: 分类ID
        current:
          type: boolean
          description: 是否展开子菜单
        hasChild:
          type: boolean
          description: 是否有孩子节点
        children:
          type: array
          items:
            $ref: '#/definitions/Menu'
          description: 子菜单
        menuUrl:
          $ref: '#/definitions/UrlVO'
          description: 菜单地址
  UrlVO:
    type: object
    properties:
        id:
          type: integer
          format: int32
          description: 链接id，主要用于保存地区id
        url:
          type: string
          description: 链接地址
        text:
          type: string
          description: 链接文字
        target:
          type: boolean
          description: 跳转方式
        
  ConsigneeDTO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 收货人ID
      name:
        type: string
        description: 收货人姓名
      mobile:
        type: string
        description: 收货人手机
      phone:
        type: string
        description: 收货人电话
      address:
        type: string
        description: 收货人地址
      post:
        type: string
        description: 邮编
      region:
        type: array
        items:
          $ref: '#/definitions/RegionDTO'
      isDefault:
        type: boolean
        description: 是否默认收货人
      mail:
        type: string
        description: 邮编
    
  NavigationCategory:
    type: object
    properties: 
      id: 
        type: integer
        description: 导航id
      name:
        type: string
        description: 导航名称
      pic:
        type: string
        description: 分类配图图片地址
      activePic:
        type: string
        description: 高亮显示图片地址
      subNavigations:
        type: array
        items:
          $ref: '#/definitions/NavigationCategory'
      params:
        type: array
        items:
          $ref: '#/definitions/Model'
          
  CouponDefinitionResult:
    type: object
    properties: 
      totalNum: 
        type: integer
        description: 总记录数
      pageNo:
        type: integer
        description: 当前页码
      coupons:
        type: array
        items:
          $ref: '#/definitions/CouponDefinitionVO'
          
         
  CouponDefinitionVO:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      beginTime:
        type: string
      endTime:
        type: string
      type:
        type: integer
      pic:
        type: string
      price:
        type: number
      stock:
        type: integer
      description:
        type: string
      pictureId: 
        type: integer
      pointPrice:
        type: number
        
  AppInfo:
    type: object
    properties: 
      version: 
        type: string
        description: app版本号
      description:
        type: string
        description: 描述
      url:
        type: string
        description: 更新地址
      force:
        type: boolean
        description: 是否强制更新
        
  ArticleTitles:
    type: object
    properties: 
      id: 
        type: integer
        description: 文章id
      title:
        type: string
        description: 文章内容
        
  MemberVO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 主键标识
      nickname:
        type: string
        description: 会员昵称
      pic: 
        type: string
        description: 会员头像图片路径
      sex:
        type: integer
        format: int32
        description: 性别
      birthday:
        type: string
        description: 会员生日
      memberGrade:
        type: string
        description: 会员等级名称
      collectCount:
        type: integer
        format: int32
        description: 会员收藏数量
      unPayOrderCount:
        type: integer
        format: int32
        description: 会员待支付订单数量
      unReceiveOrderCount:
        type: integer
        format: int32
        description: 会员待收货订单数量
      unRemarkOrderCount:
        type: integer
        format: int32
        description: 会员待评论订单数量
      memberCouponCount:
        type: integer
        format: int32
        description: 会员优惠券数量
      afterSaleCount:
        type: integer
        format: int32
        description: 会员售后申请单数量
      unSendOrderCount:
        type: integer
        format: int32
        description: 会员待收货订单数量
      pointAmount:
        type: integer
        format: int32
        description: 积分
        
  CancelReasonVO:
    type: object
    properties: 
      reasonId:
        type: integer
        description: 取消订单原因ID
      reason:
        type: string
        description: 取消订单原因
        
  AfterSaleReasonVO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 售后申请原因id
      name:
        type: string
        description: 原因名称
        
  GoodsMatchVO:
    type: object
    properties:
      id:
        type: integer
        description: 货品式ID
      productId:
        type: integer
        description: 商品ID
      productName:
        type: string
        description: 商品名称
      matchPrice:
        type: string
        description: 市场价
      thumbUrl:
        type: string
        description: 商品图片
        
  RegionDTO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 地区id.
      parentId:
        type: integer
        format: int32
        description: 父级id.
      name:
        type: string
        description: 中文名称.
      nameEN:
        type: string
        description: 英文名称.
      parentName:
        type: string
        description: 父级名称.
      parentNameEN:
        type: string
        description: 父级英文名称.
      sequence:
        type: integer
        format: int32
        description: 序列.
      level:
        type: string
        description: 级别.
      hasChild:
        type: integer
        format: int32
        description: '是否含有子集, 0为没有. 1为含有.'
      parentPath:
        type: string
        description: .
      createUser:
        type: integer
        format: int32
        description: 创建者id.
      lastModifyUser:
        type: integer
        format: int32
        description: 最后修改者id.
      createTime:
        type: string
        format: date
        description: 创建时间.
      lastModifyTime:
        type: string
        format: date
        description: 最后修改时间.
        
  MapAddRemark:
    type: object
    properties:
      key:
        type: object
        properties:
          result:
            type: integer
            description: 评论结果
      value:
        type: object
            
  RemarkVO:
      type: object
      properties:
        id:
          type: integer
          description: 评论ID
        userName:
          type: string
          description: 用户名
        userPic:
          type: string
          description: 用户头像
        content:
          type: string
          description: 评论内容
        score:
          type: integer
          description: 评分
        time:
          type: string
          description: 评论时间
        point:
          type: integer
          description: 赠送积分
        memberGrade:
          type: string
          description: 会员等级
        isAnonymously:
          type: boolean
          description: 是否匿名
        pics:
          type: array
          items:
            type: string
          description: 图片数组

  ModelLogin:
    type: object
    properties:
      key:
        type: object
        properties:
          id:
            type: integer
            description: 会员ID
          loginName:
            type: string
            description: 用户名
          userSession:
            type: string
            description: 会员SESSION
          hasPayPassword:
            type: boolean
            description: 支付密码是否设置
      value:
        type: object

  CaptchaInfo:
    type: object
    properties: 
      dataType: 
        type: string
        description: 返回类型【image/jpeg】
      base64:
        type: string
        description: 图片验证码base64编码
# TODO 以下类型不对，为临时防错补充；待修正
  ConsigneeVO:
    description: 收货人.
    type: object
    properties:
      id: 
        type: integer
        description: 收货人id
      name:
        type: string
        description: 收货人姓名
      mobile:
        type: integer
        description: 收货人手机
      address:
        $ref: '#/definitions/Address'
        
  Address:
    description: 地址信息
    type: object
    properties:
      regionId:
        type: integer 
        description: 地区id
      address:
        type: string
        description: 地址信息

  PayModeTypeVO:
    description: 支付方式.
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 支付方式id
        
  DeliveryModeVO:
    description: 配送方式.
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 配送方式id

  OrderAmountVO:
    description: 发票.
    type: object
    properties:
      totalAmount:
        type: number
        format: double
        description: 商品总金额.
      discountAmount:
        type: number
        format: double
        description: 商品优惠总金额.
      checkoutDiscountAmount:
        type: number
        format: double
        description: 结算商品优惠.
      couponDiscountAmount:
        type: number
        format: double
        description: 优惠券减商品优惠.
      totalDiscountAmount:
        type: number
        format: double
        description: 结算中心总优惠=商品总优惠+结算商品总优惠+优惠券商品优惠.
      freight:
        type: number
        format: double
        description: 原运费，客户需要支付的原始运费.
      freightServiceFee:
        type: number
        format: double
        description: 准时达服务费.
      discountFreight:
        type: number
        format: double
        description: 运费（单、多）优惠.
      checkoutDiscountFreight:
        type: number
        format: double
        description: 结算运费优惠.
      couponDiscountFreight:
        type: number
        format: double
        description: 优惠券减运费优惠.
      pointDiscount:
        type: number
        format: double
        description: 积分优惠.
      totalDiscountFreight:
        type: number
        format: double
        description: 运费总优惠=运费（单、多）优惠+结算运费优惠+优惠券运费优惠+积分抵运费.
      totalFreight:
        type: number
        format: double
        description: 总运费=freight+freightServiceFee-totalDiscountFreight.
      payableFreight:
        type: number
        format: double
        description: 应付运费=freight-totalDiscountFreight.
      payableAmount:
        type: number
        format: double
        description: 应付金额.

  CheckoutVO:
    description: 结算信息
    type: object
    properties:
      consignee:
        $ref: '#/definitions/ConsigneeVO'
      cart:
        $ref: '#/definitions/CartVO'
      payModeTypeVOs:
        type: array
        description: 支付方式
        items:
          $ref: '#/definitions/PayModeTypeVO'  
      deliveryModes:
        type: array
        description: 配送方式
        items:
          $ref: '#/definitions/DeliveryModeVO'
      invoices:
        $ref: '#/definitions/InvoiceVO'
      cartToken:
        description: 购物车状态戳
        type: string
        
  Coupons:
    type: object
    properties:
      coupons:
        type: array
        items:
          $ref: '#/definitions/CheckoutCouponVO'
          
  InvoiceVO:
    type: object
    description: 发票
    properties:
      status:
        type: integer
        description: 发票状态（0-不需要；1-需要）
      type:
        type: integer
        description: 发票类型
      title:
        type: string
        description: 发票抬头
      invoiceCategory:
        type: integer
        description: 发票类型id
          
  CheckoutCouponVO:
    description: 发票.
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 优惠券ID.
      ruleId:
        type: integer
        format: int32
        description: 优惠券规则ID.
      title:
        type: string
        description: 优惠券标题.
      pic:
        type: string
        description: 优惠券图片 url.
      beginTime:
        type: string
        description: 开始时间.
      endTime:
        type: string
        description: 结束时间.
      type:
        type: string
        description: 优惠券类型.
      selected:
        type: boolean
        description: 是否已选择.
      remainTime:
        type: integer
        format: int32
        description: 可用优惠券剩余时间，单位天.
      value:
        type: string
        description: 优惠券对应金额.
        
  CartVO:
    description: 移动端购物篮集合
    type: array
    items: 
      $ref: '#/definitions/BasketVO'
      
  BasketVO:
    type: object
    properties:
      id:
        description: 购物篮ID
        type: integer
        format: int32
      countDown:
        description: 抢购规则倒计时
        type: integer
        format: int64
      items:
        description: 普通商品
        type: array
        items:
          $ref: '#/definitions/BasketItemVO'
      promotions:
        description: 促销商品
        type: array
        items:
          $ref: '#/definitions/BasketItemVO'
      limits:
        description: 抢购商品
        type: array
        items:
          $ref: '#/definitions/BasketItemVO'
      notMainRules:
        description: 非主线规则
        type: array
        items: 
          $ref: '#/definitions/BasketRuleVO'
      mainRules:
        description: 主线规则
        type: array
        items:
          $ref: '#/definitions/BasketRuleVO'
      info:
        description: 购物车统计信息
        type: object
        items:
          $ref: '#/definitions/InfoVO'

  BasketItemVO:
    type: object
    properties:
      id:
        description: 购物项ID
        type: integer
        format: int32
      goodsId:
        description: 商品ID
        type: integer
        format: int64
      productId:
        description: 产品ID
        type: integer
        format: int64
      selected:
        description: 是否选中
        type: boolean
      name:
        description: 购物项名称
        type: string
      salesPrice:
        description: 销售价
        type: object
        items:
          $ref: '#/definitions/PriceVO'
      marketPirce:
        description: 原价，市场价
        type: object
        items:
          $ref: '#/definitions/PriceVO'
      pic:
        description: 图片路径
        type: string
      rules:
        description: 单品规则列表
        type: array
        items:
          $ref: '#/definitions/BasketItemRuleVO'
      number:
        description: 购买数量
        type: integer
        format: int32
      styleName:
        description: 风格
        type: string
      isSupportSevenDayRefund:
        description: 是否支持7天购
        type: boolean
      valid:
        description: 是否有效
        type: boolean
      weigth:
        description: 商品重量
        type: string
      type:
        description: 购物车类型
        type: integer
        format: int32
      brand:
        description: 品牌
        type: string
      count:
        description: 商品可卖数
        type: integer
        format: int32
      secondTime:
        description: 抢购剩余时间
        type: integer
        format: int64
        
  PriceVO:
    type: object
    properties:
      type:
        description: 价格类型
        type: string
      name:
        description: 价格名称
        type: string
      value:
        description: 价格数量
        type: string
        
  BasketItemRuleVO:
    type: object
    properties:
      ruleId:
        description: 规则ID
        type: integer
        format: int32
      label:
        description: 标签名称
        type: string
      ruleName:
        description: 规格名称
        type: string
      type:
        description: 规则类型,判定标签
        type: integer
        format: int32
      rewardMark:
        description: 奖励类型标记
        type: string
      presentNumber:
        description: 可选赠品数量
        type: integer
        format: int32
      discountMark:
        description: 折扣标记
        type: string
      discountAmount:
        description: 折扣金额
        type: number
        format: double
      presentBasketItems:
        description: 赠品itemId列表
        type: array
        items: 
          $ref: '#/definitions/BasketItemVO'
      calcType:
        description: 商品计算条件类型
        type: integer
        format: int32
      rewardType:
        description: 奖励类型
        type: integer
        format: int32
        
  BasketRuleVO:
    type: object
    properties:
      ruleId:
        description: 规则ID
        type: integer
        format: int32
      ruleName:
        description: 规则名称
        type: string
      rewardMark:
        description: 奖励标记类型
        type: string
      lackPriceUnit:
        description: 还差多少钱，重量，件数的单位
        type: string
      lackPrice: 
        description: 还差多少钱，重量，件数的数值
        type: number
        format: double
      effective: 
        description: 是否被执行
        type: boolean
      presentNumber:
        description: 可选赠品数量
        type: integer
        format: int32
      discountMark:
        description: 折扣标记
        type: string
      discountAmount:
        description: 折扣金额
        type: number
        format: double
      basketItemId:
        description: 被执行该规则的ItemId
        type: array
        items:
          type: integer
      presentBasketItems:
        description: 赠品购物项ID
        type: array
        items:
          $ref: '#/definitions/BasketItemVO'
      rewardType:
        description: 奖励类型
        type: integer
        format: int32
      calcType:
        description: 商品计算条件类型
        type: integer
        format: int32
      principal:
        description: 是否主线规则
        type: integer
        format: boolean
      type:
        description: 规则类型, 判定标签
        type: integer
        format: int32
        
  InfoVO: 
    type: object
    properties:
      totalQuantity:
        description:  选中总数量
        type: integer
        format: int32
      totalWeight:
        description: 选中总重量
        type: string
      discountAmount:
        description: 折扣总金额
        type: string
      totalAmount:
        description: 总价
        type: string
      payableAmount:
        description: 实付总金额
        type: string
        
          
  PresentVO:
    type: object
    properties:
      presentId:
        description: 赠品ID
        type: integer
        format: int64
      presentName:
        description: 赠品名称
        type: string
      picUrl:
        description: 图片路径
        type: string
      weight:
        description: 重量
        type: string
      number:
        description: 赠品数量
        type: integer
        format: int32
      presentPrice:
        description: 赠品价格
        type: string
      presentItemId:
        description: 赠品项ID
        type: integer
        format: int32
        
  FavoritesResult:
    type: object
    properties: 
      total: 
        type: integer
        description: 总记录数
      page:
        type: integer
        description: 当前页码
      collections:
        type: array
        items:
          $ref: '#/definitions/FavoritesModel'
  
  FavoritesModel:
    type: object
    properties:
      id:
        type: integer
        description: 收藏ID
      goodsId:
        type: integer
        description: 商品ID
      name:
        type: string
        description: 商品名称
      productUrl:
        type: string
        description: 商品URL
      pic:
        type: string
        description: 商品图片URL
      price:
        type: string
        description: 商品价格
      collectTime:
        type: string
        description: 收藏时间
      subsiteId:
        type: integer
        description: 分站ID
      valid:
        type: integer
        description: 是否可卖（1-有货；2-无货；3-已下架；4-抢购；5-单品促销）

  CreateOrderVO:
    type: object
    properties:
      consigneeId:
        type: integer
        description:  收货地址id
      couponIds:
        type: string
        description: 优惠券id
      deliveryModeId:
        type: integer
        description: 配送方式ID
      paymentModeType:
        type: integer
        description: 支付方式ID
      remark:
        type: string
        description: 备注
      payableAmount:
        type: string
        description: 支付金额
      ownDeliveryAddrId:
        type: integer
        description: 自提点ID
      invoice:
        $ref: '#/definitions/InvoiceVO'
      cartToken:
        type: string
        description: 分站ID
      paymentMethod:
        type: integer
        description: 具体在线支付方式（支付宝、微信）
      paymentToken:
        type: string
        description: 支付token
      pointPayment:
        type: string
        description: 积分支付额

  ProductInfoVO:
      type: object
      properties:
        productId:
          type: integer
          description: 商品ID
        name:
          type: string
          description: 商品名称
        brand:
          type: string
          description: 品牌名称
        pics:
          type: array
          items:
            type: string
          description: 商品图片数组
        description:
          type: string
          description: 商品详情页副标题（后台商品简介配置）
        collect:
          type: boolean
          description: 是否被当前用户所收藏
        content:
          type: string
          description: 图文详情，内容为HTML文本
        properties:
          type: array
          items: 
            $ref: '#/definitions/PropertiesVO'
          description: 商品属性数组
        goods:
          $ref: '#/definitions/GoodsVO'
        styles:
          type: array
          items: 
            $ref: '#/definitions/StylesVO'
          description: 款式信息集合
          
  PropertiesVO:
      type: object
      properties:
        title:
          type: string
          description: 属性名称
        val:
          type: string
          description: 属性值

  GoodsVO:
      type: object
      properties:
        id:
          type: string
          description: 货品ID
        styleId:
          type: string
          description: 款式ID
        salesPrice:
          type: string
          description: 商品售价
        marketPrice:
          type: string
          description: 商品市场价
        count:
          type: integer
          description: 库存数量
        stockTips:
          type: string
          description: 库存提示文本
        saleCount:
          type: integer
          description: 销量
        isSellable:
          type: string
          description: 货品是否可卖
        sellerGoodRate:
          type: string
          description: 好评率，没有为1
        limitNumber:
          type: integer
          description: 货品限购数量，计算过已加入购物车货品后的最终值，如果货品没有限购，则值为-1
        rules:
          type: string
          description: 货品优惠规则集合
        tags:
          type: string
          description: 商品促销标签集合
        flashSale:
          type: string
          description: 限时抢购相关数据，当该属性存在时，前端将显示抢购提示信息，并在抢购开始时，开启抢购功能

  StylesVO:
      type: object
      properties:
        id:
          type: string
          description: 款式ID
        properties:
          type: object
          description: 款式信息，key为款式名称，value为款式值
          
  SectionVO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 板块ID
      name:
        type: string
        description: 板块名称
      pic:
        type: string
        description: 图片地址
      type:
        type: integer
        format: int32
        description: 板块类型
      mainObjId:
        type: string
        description: 值对象ID，如商品ID、文章ID、图片ID、推荐品牌ID,如果是富文本或文字链接则为空
      slaveObjId:
        type: string
        description: 商品款式ID、英文版图片ID、活动图片ID
      contentOrText:
        type: string
        description: 富文本内容、文字链接、活动内容
      contentEnOrTextEN:
        type: string
        description: 英文版富文本内容、英文版文字链接、活动抬头
      linkUrl:
        type: string
        description: 链接地址
      linkUrlEN:
        type: string
        description: 英文版链接地址
      target:
        type: integer
        format: int32
        description: 是否展示新页，1新页、0本页
      recommendProduct:
        $ref: "#/definitions/ProductVO"
        
  ProductVO:
      type: object
      properties:
        id:
          type: integer
          description: 商品ID
        defaultGoodsId:
          type: integer
          description: 默认货品ID
        name:
          type: string
          description: 商品名称
        brand:
          type: string
          description: 品牌名称
        pic:
          type: string
          description: 商品缩略图
        stockTips:
          type: string
          description: 库存信息
        salesCount:
          type: integer
          description: 月销量
        reviewCount:
          type: integer
          description: 总评论
        salesPrice:
          type: object
          description: 商品售价
        marketPrice:
          type: object
          description: 商品市场价
        remark:
          type: string
          description: 备注
        tags:
          type: array
          items:
            type: string
          description: 商品促销标签集合

  SimpleProductVO:
      type: object
      properties:
        productId:
          type: integer
          description: 商品ID
        defaultGoodsId:
          type: integer
          description: 默认货品ID
        goodsId:
          type: integer
          description: 默认货品ID
        name:
          type: string
          description: 商品名称
        brand:
          type: string
          description: 品牌名称
        pic:
          type: string
          description: 商品缩略图
        salesPrice:
          type: string
          description: 执行价格
        marketPrice:
          type: string
          description: 市场价
        timeLimitPrice:
          type: string
          description: 抢购价
        rules:
          type: string
          description: 规则
        tags:
          type: string
          description: 商品图标链接集合
        flashSale:
          type: string
          description: 限时抢购
        quantity:
          type: string
          description: 商品数量
        stockTips:
          type: string
          description: 库存信息
        isOffShelve:
          type: boolean
          description: 是否下架
        salseCount:
          type: integer
          description: 月销量
        reviewCount:
          type: integer
          description: 总评论
          
  StructureVO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 网站结构ID
      name:
        type: string
        description: 结构名称
      parentId:
        type: integer
        format: int32
        description: 上一级网站结构ID
      sections:
        type: array
        items:
          $ref: "#/definitions/SectionVO"

  MapProductSearchResult:
      type: object
      properties:
        key:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/definitions/ProductVO'
              description: 商品信息
            totalNum:
              type: integer
              description: 总记录数
            pageNo:
              type: integer
              description: 当前页码
        value:
          type: object

  MapRemark:
      type: object
      properties:
        key:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/definitions/RemarkVO'
              description: 评论信息
            totalNum:
              type: integer
              description: 总记录数
            pageNo:
              type: integer
              description: 当前页码
        value:
              type: object   
              
  MapRemarkCount:
      type: object
      properties:
        key:
          type: object
          properties:
            total:
              type: integer
              description: 总评论数
            good:
              type: integer
              description: 好评数
            normal:
              type: integer
              description: 中评数
            bad:
              type: integer
              description: 差评数
            hasPic:
              type: integer
              description: 有图片的评论数
        value:
          type: object
          
  OrderResult:
    type: object
    properties: 
      totalNum: 
        type: integer
        description: 总记录数
      pageNo:
        type: integer
        description: 当前页码
      orders:
        type: array
        items:
          $ref: '#/definitions/OrderVO'

  OrderVO:
    type: object
    properties: 
      id: 
        type: integer
        description: 订单id
      memberId:
        type: integer
        description: 会员id
      orderNumber:
        type: string
        description: 订单号
      orderStatus:
        type: string
        description: 【0-待付款；1-待审核；2-支付未完成；3-待发货；4-已发货；5-已签收；6-取消申请中；7-已关闭；8-已取消】
      serviceStatus:
        type: string
        description: 服务状态【0-正常；1-取消申请中】
      payType:
        type: string
        description: 支付方式类型
      payTypeName:
        type: string
        description: 支付方式名称
      #是否展示按钮
      isCancelable:
        type: boolean
        description: 是否显示取消按钮
      isCommentable:
        type: boolean
        description: 是否展示去评论
      isPayable:
        type: boolean
        description: 是否显示去支付
      isServiceable:
        type: boolean
        description: 是否展示申请售后服务
      isRebuyable:
        type: boolean
        description: 是否展示再次购买
      #金额
      orderAmount:
        type: string
        description: 订单总金额  
      goodsDiscountAmount:
        type: string
        description: 订单优惠金额
      cardPaymentValue:
        type: string
        description: 卡卷支付金额
      orderWeight:
        type: string
        description: 订单重量
      freightServiceFee:
        type: string
        description: 物流服务费
      payableAmount:
        type: string
        description: 应付金额（商品总价 - 各种优惠）
      freightFee:
        type: string
        description: 运费
      processShowType:
        type: string
        description: 进度状态
      productAmount:
        type: string
        description: 商品总金额
      pointPaymentValue:
        type: string
        description: 支付积分总值
      freightFeeDiscount:
        type: string
        description: 运费优惠金额
      #配送信息
      receiverName:
        type: string
        description: 收件人名称
      regionName:
        type: string
        description: 地区名区
      payModeName:
        type: string
        description: 支付方式名称
      address:
        type: string
        description: 配送地址，已拼接地区信息的配送地址
      mobile:
        type: string
        description: 电话
      deliveryModeId:
        type: string
        description: 配送方式ID
      deliveryModeName:
        type: string
        description: 配送方式名称
      #发票信息
      needInvoice:
        type: boolean
        description: 是否需要发票
      invoiceType:
        type: integer
        description: 发票类型
      invoiceTypeName:
        type: string
        description: 发票类型名称
      invoiceTitle:
        type: string
        description: 发票抬头
      invoiceContent:
        type: string
        description: 发票内容
      invoiceCategory:
        type: string
        description: 发票类
      productNum:
        type: string
        description: 商品总数量
      #时间
      orderCreateTime:
        type: string
        description: 下单时间
      payedTime:
        type: string
        description: 支付时间
      deliveryGoodsTime:
        type: string
        description: 商品出库时间
      receivedTime:
        type: string
        description: 签收时间
      cancelTime:
        type: string
        description: 订单取消时间
      hasLimit:
        type: string
        description: 是否包含抢购商品
      addTime:
        type: string
        description: 添加时间(倒计时的时候使用)，返回倒计时秒数
      countDown:
        type: string
        description: 抢购剩余支付时间
      orderDetails:
        type: array
        items:
          $ref: '#/definitions/OrderDetails'
          
  OrderDetails:
    type: object
    properties: 
      goodsId:
        type: integer
        description: 货品id
      productId:
        type: integer
        description: 商品id
      name:
        type: string
        description: 商品名称
      pic:
        type: string
        description: 商品图片url
      quantity:
        type: integer
        description: 商品数量
      price:
        type: string
        description: 商品金额
      isLimit:
        type: boolean
        description: 是否是抢购商品
      itemType:
        type: integer
        description: 商品类型

  OrderTrackVO:
    type: object
    properties:
      expressNumber:
        type: string
        description: 物流订单号
      expressName:
        type: string
        description: 物流公司名称
      orderStatus:
        type: string
        description: 订单状态
      trackDetails:
        type: array
        items:
          $ref: '#/definitions/OrderTrackDetailVO'
          
  OrderTrackDetailVO:
    type: object
    properties:
      content:
        type: string
        description: 跟踪内容
      time:
        type: string
        description: 时间        
        
  ServiceApplyDTO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 主键ID
      orderId:
        type: integer
        format: int32
        description: 订单标识
      orderNumber:
        type: string
        description: 订单号
      merchantId:
        type: integer
        format: int32
        description: 店铺ID
        
  ServiceApplyDTO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 主键ID
      orderId:
        type: integer
        format: int32
        description: 订单标识
      orderNumber:
        type: string
        description: 订单号
      merchantId:
        type: integer
        format: int32
        description: 店铺ID
      serviceApplyNo:
        type: string
        description: 售后申请单编号
      subsiteName:
        type: string
        description: 分站名称
      memberId:
        type: integer
        description: 会员ID
      memberName:
        type: string
        description: 会员名
      returnGoodsSign:
        type: integer
        format: int32
        description: 是否退货
      exchangeGoodsSign:
        type: integer
        format: int32
        description: 是否换货
      refundSign:
        type: integer
        format: int32
        description: 是否退款
      compensateSign:
        type: integer
        format: int32
        description: 是否补偿
      applyEntryType:
        type: integer
        format: int32
        description: 申请入口
      applyTypeName:
        type: string
        description: 申请类型名称 根据是否退货、换货、退款、补偿。拼接字符串
      picIdList:
        type: array
        items:
          type: integer
          format: int32
          description: 客服上传凭证-图片ID集合
      memberPicIdList:
        type: array
        items:
          type: integer
          format: int32
          description: 会员上传凭证-图片ID集合
      reasonId:
        type: integer
        format: int32
        description: 申请原因标识
      reason:
        type: string
        description: 申请原因
      reasonEN:
        type: string
        description: 申请原因的 英语表示
      memberRemark:
        type: string
        description: 会员备注说明
      contactName:
        type: string
        description: 联系人姓名
      contactPhone:
        type: string
        description: 联系人手机
      responsibilityId:
        type: integer
        format: int32
        description: 责任归属类型
      closeReply:
        type: string
        description: 关闭原因回复
      processStoreId:
        type: integer
        format: int32
        description: 处理门店Id
      processStoreName:
        type: string
        description: 处理门店
      status:
        type: integer
        format: int32
        description: 处理状态
      statusName:
        type: string
        description: 处理状态名字
      createType:
        type: integer
        format: int32
        description: 创建类型
      createTime:
        type: string
        format: date
        description: 创建时间
      createTimeStr:
        type: string
        format: date
        description: 申请时间
      createUser:
        type: integer
        format: int32
        description: 创建用户
      createUserName:
        type: string
        description: 申请人名称
      lastModifyTime:
        type: string
        format: date
        description: 最后更新时间
      lastModifyUser:
        type: integer
        format: int32
        description: 最后更新用户
      existError:
        type: boolean
        description: 是否存在失败退款项
      pictureList:
        type: array
        items:
          type: string
          description: 客服上传-图片对象集合
      memberPictureList:
        type: array
        items:
          type: string
          description: 会员上传-图片对象集合
      statusLogList:
        type: array
        items:
          $ref: "#/definitions/ServiceApplyStatusLogDTO"
          description: 申请单状态改变日志
      operateLogList:
        type: array
        items:
          $ref: "#/definitions/ServiceApplyOperateLogDTO"
          description: 申请单操作日志
      remarkList:
        type: array
        items:
          $ref: "#/definitions/ServiceApplyRemarkDTO"
          description: 申请单备注集合
      orderItemProcessRecordList:
        type: array
        items:
          $ref: "#/definitions/OrderItemProcessRecordDTO"
          description: 货品处理信息
      serviceApplyRecyclingList:
        type: array
        items:
          $ref: "#/definitions/ServiceApplyRecyclingDTO"
          description: 系统相关回收
      refundList:
        type: array
        items:
          $ref: "#/definitions/RefundItemDTO"
          description: 退款相关
      compensateList:
        type: array
        items:
          $ref: "#/definitions/RefundItemDTO"
          description: 补偿相关
      serviceApplyExpress:
        type: array
        items:
          $ref: "#/definitions/ServiceApplyExpressDTO"
          description: 物流信息
        
  ServiceApplyStatusLogDTO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 主键ID
      serviceApplyId:
        type: integer
        format: int32
        description: 退款申请单Id
      beforeStatus:
        type: integer
        format: int32
        description: 变更前状态
      beforeStatusName:
        type: string
        description: 变更前状态
      afterStatus:
        type: integer
        format: int32
        description: 变更后状态
      afterStatusName:
        type: string
        description: 变更后状态名称
      changeDesc:
        type: string
        description: 变更描述
      operateType:
        type: integer
        format: int32
        description: 操作类型
      memberId:
        type: integer
        format: int32
        description: 会员Id
      operateTime:
        type: string
        format: date
        description: 操作时间
      operateUser:
        type: integer
        format: int32
        description: 操作用户
      operateUserName:
        type: string
        description: 操作用户名称
      operateMessage:
        type: string
        description: 操作信息

  ServiceApplyOperateLogDTO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 主键ID
      serviceApplyId:
        type: integer
        format: int32
        description: 退款申请单Id
      operateItemType:
        type: integer
        format: int32
        description: 操作项类型 1=基础信息；2=物流信息；3=商品处理记录；4=回收记录；5=退款信息；6补偿信息；7=备注；
      operateItemTypeStr:
        type: string
      objectId:
        type: integer
        format: int32
        description: 操作项ID
      changeDesc:
        type: string
        description: 变更描述
      operateType:
        type: integer
        format: int32
        description: 操作类型 1=新增；2=修改；3=状态变更；4=删除；
      operateTypeStr:
        type: string
      operateTime:
        type: string
        format: date
        description: 操作时间
      operateUser:
        type: integer
        format: int32
        description: 操作用户
      operateUserName:
        type: string
        description: 操作用户名称

  ServiceApplyRemarkDTO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 主键ID  
      serviceApplyId:
        type: integer
        format: int32
        description: 退款申请单Id
      remark:
        type: string
        description: 备注
      operateTime:
        type: string
        format: date
        description: 操作时间
      operateTimeStr:
        type: string
        description: 操作时间
      operateUser:
        type: integer
        format: int32
        description: 操作用户
      userName:
        type: string
        description: 操作用户名
        
  OrderItemProcessRecordDTO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 主键ID
      processType:
        type: integer
        format: int32
        description: 处理类型        
      processTypeStr:
        type: string
        description: 处理类型
      orderId:
        type: integer
        format: int32
        description: 订单标识               
      orderItemId:
        type: integer
        format: int32
        description: 订单明细标识 
      serviceApplyId:
        type: integer
        format: int32
        description: 售后申请单标识 
      goodsid:
        type: integer
        format: int32
        description: 货品标识         
      productName:
        type: string
        description: 商品名称
      productNameEN:
        type: string
        description: 商品英文名称
      productStyleName:
        type: string
        description: 款式名称
      productStyleFrontName:
        type: string
        description: 前台显示款式名称
      productStyleNameEN:
        type: string
        description: 款式英文名称
      barCode:
        type: string
        description: 货品编号
      executeType:
        type: integer
        format: int32
        description: 执行价类型
      executeTypeName:
        type: string
        description: 执行价类型 1. 抢购商品、2. 促销价商品、3. 赠品、4. 加价购
      productTypeName:
        type: string
        description: 商品类型
      quantity:
        type: integer
        format: int32
        description: 数量      
      price:
        type: number
        format: double
        description: 执行价
      dealPrice:
        type: number
        format: double
        description: 成交价
      afterFoldingPrice:
        type: number
        format: double
        description: 折后价=成交价-优惠券均摊
      saleQuantity:
        type: integer
        format: int32
        description: 购买数量
      status:
        type: string
        format: date
        description: 状态
      createTime:
        type: string
        format: date
        description: 创建时间
      createUser:
        type: integer
        format: int32
        description: 创建用户
      cancelTime:
        type: string
        format: date
        description: 取消时间
      cancelUser:
        type: integer
        format: int32
        description: 取消操作用户

  ServiceApplyRecyclingDTO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 主键ID
      serviceApplyId:
        type: integer
        format: int32
        description: 退款申请单Id
      pointValue:
        type: integer
        format: int32
        description: 退回积分值
      sumPoint:
        type: integer
        format: int32
        description: 需退回的总积分制
      couponId:
        type: integer
        format: int32
        description: 退回卡券ID
      couponNo:
        type: string
        description: 卡券编号
      couponName:
        type: string
        description: 优惠券名称
      couponNameEN:
        type: string
        description: 优惠券名称(英文)
      couponDesc:
        type: string
        description: 卡券描述信息
      status:
        type: integer
        format: int32
        description: 状态
      statusStr:
        type: string
        description: 状态名称
      type:
        type: integer
        format: int32
        description: 类型 1=收回积分 2=收回卡券
      rewardRemark:
        type: string
        description: 收回项描述
    
  RefundItemDTO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 主键ID  
      orderId:
        type: integer
        format: int32
        description: 订单标识
      orderNumber:
        type: string
        description: 订单号
      entryBillType:
        type: integer
        format: int32
        description: 原单据类型
      orderProcessBillItemId:
        type: integer
        format: int32
        description: 处理单退款项Id
      serviceApplyId:
        type: integer
        format: int32
        description: 售后申请单Id
      serviceApplyNumber:
        type: string
        description: 售后申请单编号
      refundType:
        type: integer
        format: int32
        description: 退 或者 补偿 1 表示退 2表示补偿 refundType 与 moneyType 共同表达退钱、补偿钱、退积分、补偿积分、退券、补偿券六种情况
      moneyType:
        type: integer
        format: int32
        description: 钱 积分 券 1表示钱 2表示积分 3表示券
      moneyTypeStr:
        type: string
        description: 补偿类型字符串
      paymentType:
        type: integer
        format: int32
        description: 支付类型
      paymentModeTypeStr:
        type: string
        description: 支付方式名称
      paymentRecordId:
        type: integer
        format: int32
        description: 原支付记录Id
      tradeNo:
        type: string 
        description: 原支付记录交易流水号
      refundMoney:
        type: number
        format: double
        description: 退款金额
      actualRefundMoney:
        type: number
        format: double
        description: 实际退款金额
      originalAmount:
        type: number
        format: double
        description: 原支付金额
      refundPointValue:
        type: integer
        format: int32
        description: 退积分值
      originalPointValue:
        type: integer
        format: int32
        description: 原支付积分
      promotionId:
        type: integer
        format: int32
        description: 退优惠券规则Id
      couponId:
        type: integer
        format: int32
        description: 退优惠券Id
      refundItemMode:
        type: integer
        format: int32
        description: 退款项方式
      refundItemModeStr:
        type: string
        description: 补偿方式
      bankOfDeposit:
        type: string
        description: 开户行
      accountName:
        type: string
        description: 开户名称
      bankAccount:
        type: string
        description: 银行账号
      interfaceStatus:
        type: integer
        format: int32
        description: 接口状态
      remark:
        type: string
        description: 备注
      status:
        type: integer
        format: int32
        description: 退款项状态
      statusStr:
        type: string
        description: 退款项状态
      createTime:
        type: string
        format: date
        description: 创建时间
      createUser:
        type: integer
        format: int32
        description: 创建用户
      createUserName:
        type: string
        description: 创建用户名称
      auditTime:
        type: string
        format: date
        description: 审核时间
      auditUser:
        type: integer
        format: int32
        description: 审核用户
      auditUserName:
        type: string
        description: 审核用户名称
      lastModifyTime:
        type: string
        format: date
        description: 最后更新时间
      lastModifyUser:
        type: integer
        format: int32
        description: 最后更新用户
      lastUserName:
        type: string
        description: lastUserName
      refundItemStr:
        type: string
        description: 退款项目，显示如下 支付宝：25元 福卡：15元 优惠券：KS12123123 积分：40分
      merchantId:
        type: integer
        format: int32
        description: 店铺id

  ServiceApplyExpressDTO:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 主键ID
      serviceApplyId:
        type: integer
        format: int32
        description: 售后申请单Id      
      sendBackMode:
        type: integer
        format: int32
        description: 返回方式   
      receiveExpress:
        type: string
        description: 寄回快递公司 
      receiveExpressNo:
        type: string
        description: 寄回快递单号 
      sendRegionId:
        type: integer
        format: int32
        description: 寄出所在地区  
      sendRegionFullStr:
        type: string
        description: 寄出所在地区 的完整表示 例如 北京市 海淀区 中关村 
      sendAddress:
        type: string
        description: 寄出详细地区   
      sendReceiverName:
        type: string
        description: 寄出收货人 
      sendMobile:
        type: string
        description: 寄出收货人手机 
      sendExpress:
        type: string
        description: 寄出快递公司 
      sendExpressNo:
        type: string
        description: 寄出快递单号        
        
  ReturnData:
    description: 返回数据格式
    type: object
    properties:
      code:
        type: integer
        description: 返回业务编码
      message:
        type: string
        description:  返回业务信息
      data: 
        type: object
        description: 返回具体数据

#  OrderGoodsMobileVO:
#    type: object
#    properties:
#      goodsId:
#        type: integer
#        description: 货品ID
#      productId:
#        type: integer
#        description: 商品ID
#      name:
#        type: string
#        description: 商品名称
#      pic:
#        type: string
#        description: 商品图片url
#      quantity:
#        type: integer
#        description: 购买商品数量
#      price:
#        type: string
#        description: 商品单价
#      isLimit:
#        type: boolean
#        description: 是否抢购
#      itemType:
#        type: integer
#        description: 商品类型      

#  BasketPresentVO:
#    type: object
#    properties:
#      basketItemId:
#        type: integer
#        format: int64
#      ruleId:
#        type: integer
#        format: int32
#      presents:
#        type: array
#        items:
#          $ref: '#/definitions/PresentVO'

#  MapOrderRemark:
#    type: object
#    properties:
#      key:
#        type: object
#      value:
#        type: object     
        
#  AfterSaleSimpleVO:
#    type: object
#    properties:
#      id:
#        type: integer
#        format: int32
#        description: 售后申请单标识.
#      serviceApplyNumber:
#        type: string
#        description: 订单编号.
#      status:
#        type: string
#        description: 售后申请单状态(处理中,已完成,已关闭).
#      refundStatus:
#        type: string
#        description: 退款状态(未退款，已退款，退款失败).
#      createTime:
#        type: string
#        description: 申请时间.
